{"version":3,"file":"NFTMintCard.js","sources":["../../../src/nft/components/NFTMintCard.tsx"],"sourcesContent":["'use client';\nimport { useIsMounted } from '@/internal/hooks/useIsMounted';\nimport { useTheme } from '@/internal/hooks/useTheme';\nimport { NFTLifecycleProvider } from '@/nft/components/NFTLifecycleProvider';\nimport { NFTProvider } from '@/nft/components/NFTProvider';\nimport {\n  NFTAssetCost,\n  NFTCollectionTitle,\n  NFTCreator,\n  NFTMintButton,\n  NFTQuantitySelector,\n} from '@/nft/components/mint';\nimport { useMintData as defaultUseMintData } from '@/nft/hooks/useMintData';\nimport { LifecycleType, type NFTMintCardReact } from '@/nft/types';\nimport { buildMintTransactionData as defaultBuildMintTransaction } from '@/nft/utils/buildMintTransactionData';\nimport { background, border, cn, color } from '../../styles/theme';\nimport NFTErrorBoundary from './NFTErrorBoundary';\nimport { NFTErrorFallback } from './NFTErrorFallback';\nimport { NFTMedia } from './view';\n\nfunction NFTMintCardDefaultContent() {\n  return (\n    <>\n      <NFTCreator />\n      <NFTMedia />\n      <NFTCollectionTitle />\n      <NFTQuantitySelector />\n      <NFTAssetCost />\n      <NFTMintButton />\n    </>\n  );\n}\n\nexport function NFTMintCard({\n  children = <NFTMintCardDefaultContent />,\n  className,\n  contractAddress,\n  tokenId,\n  isSponsored,\n  useNFTData = defaultUseMintData,\n  buildMintTransaction = defaultBuildMintTransaction,\n  onStatus,\n  onError,\n  onSuccess,\n}: NFTMintCardReact) {\n  const componentTheme = useTheme();\n\n  const isMounted = useIsMounted();\n\n  // prevents SSR hydration issue\n  if (!isMounted) {\n    return null;\n  }\n\n  return (\n    <NFTErrorBoundary fallback={NFTErrorFallback}>\n      <NFTLifecycleProvider\n        type={LifecycleType.MINT}\n        onStatus={onStatus}\n        onError={onError}\n        onSuccess={onSuccess}\n      >\n        <NFTProvider\n          contractAddress={contractAddress}\n          tokenId={tokenId}\n          isSponsored={isSponsored}\n          useNFTData={useNFTData}\n          buildMintTransaction={buildMintTransaction}\n        >\n          <div\n            className={cn(\n              componentTheme,\n              color.foreground,\n              background.default,\n              border.defaultActive,\n              border.radius,\n              'flex w-full max-w-[500px] flex-col gap-2 border p-4',\n              className,\n            )}\n            data-testid=\"ockNFTMintCard_Container\"\n          >\n            {children}\n          </div>\n        </NFTProvider>\n      </NFTLifecycleProvider>\n    </NFTErrorBoundary>\n  );\n}\n"],"names":["defaultUseMintData","defaultBuildMintTransaction"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoBA,SAAS,4BAA4B;AACnC,SAEI,qBAAA,UAAA,EAAA,UAAA;AAAA,IAAA,oBAAC,YAAW,EAAA;AAAA,wBACX,UAAS,EAAA;AAAA,wBACT,oBAAmB,EAAA;AAAA,wBACnB,qBAAoB,EAAA;AAAA,wBACpB,cAAa,EAAA;AAAA,wBACb,eAAc,CAAA,CAAA;AAAA,EAAA,GACjB;AAEJ;AAEO,SAAS,YAAY;AAAA,EAC1B,+BAAY,2BAA0B,EAAA;AAAA,EACtC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,aAAaA;AAAAA,EACb,uBAAuBC;AAAAA,EACvB;AAAA,EACA;AAAA,EACA;AACF,GAAqB;AACnB,QAAM,iBAAiB,SAAS;AAEhC,QAAM,YAAY,aAAa;AAG/B,MAAI,CAAC,WAAW;AACP,WAAA;AAAA,EAAA;AAIP,SAAA,oBAAC,kBAAiB,EAAA,UAAU,kBAC1B,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAM,cAAc;AAAA,MACpB;AAAA,MACA;AAAA,MACA;AAAA,MAEA,UAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UACA;AAAA,UAEA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW;AAAA,gBACT;AAAA,gBACA,MAAM;AAAA,gBACN,WAAW;AAAA,gBACX,OAAO;AAAA,gBACP,OAAO;AAAA,gBACP;AAAA,gBACA;AAAA,cACF;AAAA,cACA,eAAY;AAAA,cAEX;AAAA,YAAA;AAAA,UAAA;AAAA,QACH;AAAA,MAAA;AAAA,IACF;AAAA,EAAA,GAEJ;AAEJ;"}