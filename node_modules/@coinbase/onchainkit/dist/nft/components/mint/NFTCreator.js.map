{"version":3,"file":"NFTCreator.js","sources":["../../../../src/nft/components/mint/NFTCreator.tsx"],"sourcesContent":["import { Avatar, Badge, Identity, Name } from '@/identity';\nimport { useNFTContext } from '@/nft/components/NFTProvider';\nimport { cn } from '@/styles/theme';\nimport { useOnchainKit } from '@/useOnchainKit';\n\ntype NFTCreatorReact = {\n  className?: string;\n};\n\nexport function NFTCreator({ className }: NFTCreatorReact) {\n  const { schemaId } = useOnchainKit();\n  const { creatorAddress } = useNFTContext();\n\n  if (!creatorAddress) {\n    return null;\n  }\n\n  return (\n    <div className={cn('-my-1 flex justify-between', className)}>\n      <Identity\n        className=\"px-0 py-0 [&>div]:space-x-2\"\n        address={creatorAddress}\n        schemaId={schemaId}\n      >\n        <Avatar className=\"h-4 w-4\" />\n        <Name>\n          <Badge />\n        </Name>\n      </Identity>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AASgB,SAAA,WAAW,EAAE,aAA8B;AACnD,QAAA,EAAE,SAAS,IAAI,cAAc;AAC7B,QAAA,EAAE,eAAe,IAAI,cAAc;AAEzC,MAAI,CAAC,gBAAgB;AACZ,WAAA;AAAA,EAAA;AAGT,6BACG,OAAI,EAAA,WAAW,GAAG,8BAA8B,SAAS,GACxD,UAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAU;AAAA,MACV,SAAS;AAAA,MACT;AAAA,MAEA,UAAA;AAAA,QAAC,oBAAA,QAAA,EAAO,WAAU,UAAU,CAAA;AAAA,QAC3B,oBAAA,MAAA,EACC,UAAC,oBAAA,OAAA,CAAA,CAAM,EACT,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EAAA,GAEJ;AAEJ;"}