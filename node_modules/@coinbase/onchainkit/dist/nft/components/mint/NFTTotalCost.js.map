{"version":3,"file":"NFTTotalCost.js","sources":["../../../../src/nft/components/mint/NFTTotalCost.tsx"],"sourcesContent":["import { infoSvg } from '@/internal/svg/infoSvg';\nimport { multiplyFloats } from '@/internal/utils/multiplyFloats';\nimport { useNFTContext } from '@/nft/components/NFTProvider';\nimport { background, border, cn, text } from '@/styles/theme';\nimport { formatAmount } from '@/token/utils/formatAmount';\nimport { type ReactNode, useCallback, useMemo, useState } from 'react';\n\ntype NFTTotalCostReact = {\n  className?: string;\n  label?: ReactNode;\n};\n\nexport function NFTTotalCost({\n  className,\n  label = 'Total cost',\n}: NFTTotalCostReact) {\n  const [isOverlayVisible, setIsOverlayVisible] = useState(false);\n  const { price, mintFee, quantity } = useNFTContext();\n\n  const toggleOverlay = useCallback(() => {\n    setIsOverlayVisible((prev) => !prev);\n  }, []);\n\n  const showOverlay = useCallback(() => {\n    setIsOverlayVisible(true);\n  }, []);\n\n  const hideOverlay = useCallback(() => {\n    setIsOverlayVisible(false);\n  }, []);\n\n  const overlay = useMemo(() => {\n    // only show overlay if mintFee\n    if (\n      price?.amount === undefined ||\n      price?.amountUSD === undefined ||\n      mintFee?.amount === undefined ||\n      mintFee.amountUSD === undefined\n    ) {\n      return null;\n    }\n\n    return (\n      <div\n        className={cn(\n          background.default,\n          border.radius,\n          border.defaultActive,\n          'absolute z-10 w-full border',\n        )}\n      >\n        <div\n          className={cn(\n            text.label2,\n            'flex items-center justify-between px-4 py-2',\n          )}\n        >\n          <div>NFT cost</div>\n          <div>\n            $\n            {formatAmount(\n              `${multiplyFloats(Number(price.amountUSD), quantity)}`,\n              {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              },\n            )}\n          </div>\n        </div>\n        <div\n          className={cn(\n            'flex items-center justify-between px-4 py-2',\n            text.label2,\n          )}\n        >\n          <div>Mint fee</div>\n          <div>\n            $\n            {formatAmount(\n              `${multiplyFloats(Number(mintFee.amountUSD), quantity)}`,\n              {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              },\n            )}\n          </div>\n        </div>\n      </div>\n    );\n  }, [mintFee, price, quantity]);\n\n  if (\n    !price?.amount ||\n    !price?.currency ||\n    !price?.amountUSD ||\n    !mintFee?.amount ||\n    !mintFee.amountUSD\n  ) {\n    return null;\n  }\n\n  return (\n    <div className=\"relative\">\n      <div\n        className={cn(\n          text.label2,\n          'flex items-center justify-between',\n          className,\n        )}\n      >\n        <div>{label}</div>\n        <div className=\"flex items-center gap-2\">\n          <div>\n            $\n            {formatAmount(\n              `${multiplyFloats(Number(price.amountUSD), quantity)}`,\n              {\n                minimumFractionDigits: 2,\n                maximumFractionDigits: 2,\n              },\n            )}\n          </div>\n          {overlay && (\n            <button\n              type=\"button\"\n              data-testid=\"ockNFTTotalCostInfo\"\n              className=\"h-2.5 w-2.5 cursor-pointer object-cover\"\n              onClick={toggleOverlay}\n              onMouseEnter={showOverlay}\n              onMouseLeave={hideOverlay}\n            >\n              {infoSvg}\n            </button>\n          )}\n        </div>\n      </div>\n      {isOverlayVisible && overlay}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAYO,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA,QAAQ;AACV,GAAsB;AACpB,QAAM,CAAC,kBAAkB,mBAAmB,IAAI,SAAS,KAAK;AAC9D,QAAM,EAAE,OAAO,SAAS,SAAA,IAAa,cAAc;AAE7C,QAAA,gBAAgB,YAAY,MAAM;AAClB,wBAAA,CAAC,SAAS,CAAC,IAAI;AAAA,EACrC,GAAG,EAAE;AAEC,QAAA,cAAc,YAAY,MAAM;AACpC,wBAAoB,IAAI;AAAA,EAC1B,GAAG,EAAE;AAEC,QAAA,cAAc,YAAY,MAAM;AACpC,wBAAoB,KAAK;AAAA,EAC3B,GAAG,EAAE;AAEC,QAAA,UAAU,QAAQ,MAAM;AAG1B,SAAA,+BAAO,YAAW,WAClB,+BAAO,eAAc,WACrB,mCAAS,YAAW,UACpB,QAAQ,cAAc,QACtB;AACO,aAAA;AAAA,IAAA;AAIP,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW;AAAA,UACT,WAAW;AAAA,UACX,OAAO;AAAA,UACP,OAAO;AAAA,UACP;AAAA,QACF;AAAA,QAEA,UAAA;AAAA,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW;AAAA,gBACT,KAAK;AAAA,gBACL;AAAA,cACF;AAAA,cAEA,UAAA;AAAA,gBAAA,oBAAC,SAAI,UAAQ,WAAA,CAAA;AAAA,qCACZ,OAAI,EAAA,UAAA;AAAA,kBAAA;AAAA,kBAEF;AAAA,oBACC,GAAG,eAAe,OAAO,MAAM,SAAS,GAAG,QAAQ,CAAC;AAAA,oBACpD;AAAA,sBACE,uBAAuB;AAAA,sBACvB,uBAAuB;AAAA,oBAAA;AAAA,kBACzB;AAAA,gBACF,EACF,CAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UACF;AAAA,UACA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW;AAAA,gBACT;AAAA,gBACA,KAAK;AAAA,cACP;AAAA,cAEA,UAAA;AAAA,gBAAA,oBAAC,SAAI,UAAQ,WAAA,CAAA;AAAA,qCACZ,OAAI,EAAA,UAAA;AAAA,kBAAA;AAAA,kBAEF;AAAA,oBACC,GAAG,eAAe,OAAO,QAAQ,SAAS,GAAG,QAAQ,CAAC;AAAA,oBACtD;AAAA,sBACE,uBAAuB;AAAA,sBACvB,uBAAuB;AAAA,oBAAA;AAAA,kBACzB;AAAA,gBACF,EACF,CAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QACF;AAAA,MAAA;AAAA,IACF;AAAA,EAED,GAAA,CAAC,SAAS,OAAO,QAAQ,CAAC;AAE7B,MACE,EAAC,+BAAO,WACR,EAAC,+BAAO,aACR,EAAC,+BAAO,cACR,EAAC,mCAAS,WACV,CAAC,QAAQ,WACT;AACO,WAAA;AAAA,EAAA;AAIP,SAAA,qBAAC,OAAI,EAAA,WAAU,YACb,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,WAAW;AAAA,UACT,KAAK;AAAA,UACL;AAAA,UACA;AAAA,QACF;AAAA,QAEA,UAAA;AAAA,UAAA,oBAAC,SAAK,UAAM,MAAA,CAAA;AAAA,UACZ,qBAAC,OAAI,EAAA,WAAU,2BACb,UAAA;AAAA,YAAA,qBAAC,OAAI,EAAA,UAAA;AAAA,cAAA;AAAA,cAEF;AAAA,gBACC,GAAG,eAAe,OAAO,MAAM,SAAS,GAAG,QAAQ,CAAC;AAAA,gBACpD;AAAA,kBACE,uBAAuB;AAAA,kBACvB,uBAAuB;AAAA,gBAAA;AAAA,cACzB;AAAA,YACF,GACF;AAAA,YACC,WACC;AAAA,cAAC;AAAA,cAAA;AAAA,gBACC,MAAK;AAAA,gBACL,eAAY;AAAA,gBACZ,WAAU;AAAA,gBACV,SAAS;AAAA,gBACT,cAAc;AAAA,gBACd,cAAc;AAAA,gBAEb,UAAA;AAAA,cAAA;AAAA,YAAA;AAAA,UACH,EAEJ,CAAA;AAAA,QAAA;AAAA,MAAA;AAAA,IACF;AAAA,IACC,oBAAoB;AAAA,EAAA,GACvB;AAEJ;"}