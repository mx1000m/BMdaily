{"version":3,"file":"useMintDetails.js","sources":["../../../src/nft/hooks/useMintDetails.ts"],"sourcesContent":["import { getMintDetails } from '@/api/getMintDetails';\nimport type { MintDetails } from '@/api/types';\nimport { RequestContext } from '@/core/network/constants';\nimport { isNFTError } from '@/nft/utils/isNFTError';\nimport { type UseQueryResult, useQuery } from '@tanstack/react-query';\nimport type { UseMintDetailsParams } from '../types';\n\nexport function useMintDetails(\n  params: UseMintDetailsParams<MintDetails>,\n  _context: RequestContext = RequestContext.Hook,\n): UseQueryResult<MintDetails> {\n  const { contractAddress, takerAddress, tokenId, queryOptions } = params;\n\n  return useQuery({\n    queryKey: ['useMintDetails', contractAddress, takerAddress, tokenId],\n    queryFn: async () => {\n      const mintDetails = await getMintDetails(\n        {\n          contractAddress,\n          takerAddress,\n          tokenId,\n        },\n        _context,\n      );\n\n      if (isNFTError(mintDetails)) {\n        throw mintDetails;\n      }\n\n      return mintDetails;\n    },\n    retry: false,\n    refetchOnWindowFocus: false,\n    ...queryOptions,\n  });\n}\n"],"names":[],"mappings":";;;;AAOO,SAAS,eACd,QACA,WAA2B,eAAe,MACb;AAC7B,QAAM,EAAE,iBAAiB,cAAc,SAAS,aAAiB,IAAA;AAEjE,SAAO,SAAS;AAAA,IACd,UAAU,CAAC,kBAAkB,iBAAiB,cAAc,OAAO;AAAA,IACnE,SAAS,YAAY;AACnB,YAAM,cAAc,MAAM;AAAA,QACxB;AAAA,UACE;AAAA,UACA;AAAA,UACA;AAAA,QACF;AAAA,QACA;AAAA,MACF;AAEI,UAAA,WAAW,WAAW,GAAG;AACrB,cAAA;AAAA,MAAA;AAGD,aAAA;AAAA,IACT;AAAA,IACA,OAAO;AAAA,IACP,sBAAsB;AAAA,IACtB,GAAG;AAAA,EAAA,CACJ;AACH;"}