{"version":3,"file":"useSwapBalances.js","sources":["../../../src/swap/hooks/useSwapBalances.tsx"],"sourcesContent":["import type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport type { Token } from '../../token';\nimport { useGetETHBalance } from '../../wallet/hooks/useGetETHBalance';\nimport { useGetTokenBalance } from '../../wallet/hooks/useGetTokenBalance';\n\nexport function useSwapBalances({\n  address,\n  fromToken,\n  toToken,\n}: {\n  address?: Address;\n  fromToken?: Token;\n  toToken?: Token;\n}) {\n  const {\n    convertedBalance: convertedEthBalance,\n    error: ethBalanceError,\n    response: ethBalanceResponse,\n  } = useGetETHBalance(address);\n\n  const {\n    convertedBalance: convertedFromBalance,\n    error: fromBalanceError,\n    response: _fromTokenResponse,\n  } = useGetTokenBalance(address, fromToken);\n\n  const {\n    convertedBalance: convertedToBalance,\n    error: toBalanceError,\n    response: _toTokenResponse,\n  } = useGetTokenBalance(address, toToken);\n\n  const isFromNativeToken = fromToken?.symbol === 'ETH';\n  const isToNativeToken = toToken?.symbol === 'ETH';\n\n  const fromBalanceString = isFromNativeToken\n    ? convertedEthBalance\n    : convertedFromBalance;\n  const fromTokenBalanceError = isFromNativeToken\n    ? ethBalanceError\n    : fromBalanceError;\n  const toBalanceString = isToNativeToken\n    ? convertedEthBalance\n    : convertedToBalance;\n  const toTokenBalanceError = isToNativeToken\n    ? ethBalanceError\n    : toBalanceError;\n  const fromTokenResponse = isFromNativeToken\n    ? ethBalanceResponse\n    : _fromTokenResponse;\n  const toTokenResponse = isToNativeToken\n    ? ethBalanceResponse\n    : _toTokenResponse;\n\n  return useValue({\n    fromBalanceString,\n    fromTokenBalanceError,\n    fromTokenResponse,\n\n    toBalanceString,\n    toTokenBalanceError,\n    toTokenResponse,\n  });\n}\n"],"names":[],"mappings":";;;AAMO,SAAS,gBAAgB;AAAA,EAC9B;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACK,QAAA;AAAA,IACJ,kBAAkB;AAAA,IAClB,OAAO;AAAA,IACP,UAAU;AAAA,EAAA,IACR,iBAAiB,OAAO;AAEtB,QAAA;AAAA,IACJ,kBAAkB;AAAA,IAClB,OAAO;AAAA,IACP,UAAU;AAAA,EAAA,IACR,mBAAmB,SAAS,SAAS;AAEnC,QAAA;AAAA,IACJ,kBAAkB;AAAA,IAClB,OAAO;AAAA,IACP,UAAU;AAAA,EAAA,IACR,mBAAmB,SAAS,OAAO;AAEjC,QAAA,qBAAoB,uCAAW,YAAW;AAC1C,QAAA,mBAAkB,mCAAS,YAAW;AAEtC,QAAA,oBAAoB,oBACtB,sBACA;AACE,QAAA,wBAAwB,oBAC1B,kBACA;AACE,QAAA,kBAAkB,kBACpB,sBACA;AACE,QAAA,sBAAsB,kBACxB,kBACA;AACE,QAAA,oBAAoB,oBACtB,qBACA;AACE,QAAA,kBAAkB,kBACpB,qBACA;AAEJ,SAAO,SAAS;AAAA,IACd;AAAA,IACA;AAAA,IACA;AAAA,IAEA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AACH;"}