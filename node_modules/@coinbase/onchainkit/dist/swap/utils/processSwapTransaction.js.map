{"version":3,"file":"processSwapTransaction.js","sources":["../../../src/swap/utils/processSwapTransaction.ts"],"sourcesContent":["import type { Address } from 'viem';\nimport { encodeFunctionData, parseAbi } from 'viem';\nimport { base } from 'viem/chains';\nimport {\n  PERMIT2_CONTRACT_ADDRESS,\n  UNIVERSALROUTER_CONTRACT_ADDRESS,\n} from '../constants';\nimport type { ProcessSwapTransactionParams, SwapTransaction } from '../types';\nimport { sendSwapTransactions } from './sendSwapTransactions';\n\nexport async function processSwapTransaction({\n  chainId,\n  config,\n  isSponsored,\n  paymaster,\n  sendCallsAsync,\n  sendTransactionAsync,\n  swapTransaction,\n  switchChainAsync,\n  updateLifecycleStatus,\n  useAggregator,\n  walletCapabilities,\n}: ProcessSwapTransactionParams) {\n  const { transaction, approveTransaction, quote } = swapTransaction;\n  const transactions: SwapTransaction[] = [];\n\n  // for swaps from ERC-20 tokens,\n  // if there is an approveTransaction present,\n  // request approval for the amount\n  // for V1 API, `approveTx` will be an ERC-20 approval against the Router\n  // for V2 API, `approveTx` will be an ERC-20 approval against the `Permit2` contract\n  if (approveTransaction?.data) {\n    transactions.push({\n      transaction: {\n        to: approveTransaction.to,\n        value: approveTransaction.value,\n        data: approveTransaction.data,\n      },\n      transactionType: 'ERC20',\n    });\n\n    // for the V2 API, we use Uniswap's `UniversalRouter`, which uses `Permit2` for ERC-20 approvals\n    // this adds an additional transaction/step to the swap process\n    // since we need to make an extra transaction to `Permit2` to allow the UniversalRouter to spend the approved funds\n    // this would typically be a (gasless) signature, but we're using a transaction here to allow batching for Smart Wallets\n    // read more: https://blog.uniswap.org/permit2-and-universal-router\n    if (!useAggregator) {\n      const permit2ContractAbi = parseAbi([\n        'function approve(address token, address spender, uint160 amount, uint48 expiration) external',\n      ]);\n      const data = encodeFunctionData({\n        abi: permit2ContractAbi,\n        functionName: 'approve',\n        args: [\n          quote.from.address as Address,\n          UNIVERSALROUTER_CONTRACT_ADDRESS,\n          BigInt(quote.fromAmount),\n          20_000_000_000_000, // The deadline where the approval is no longer valid - see https://docs.uniswap.org/contracts/permit2/reference/allowance-transfer\n        ],\n      });\n      transactions.push({\n        transaction: {\n          to: PERMIT2_CONTRACT_ADDRESS,\n          value: 0n,\n          data,\n        },\n        transactionType: 'Permit2',\n      });\n    }\n  }\n  // The Swap Execution Transaction\n  transactions.push({\n    transaction: {\n      to: transaction.to,\n      value: transaction.value,\n      data: transaction.data,\n    },\n    transactionType: 'Swap',\n  });\n\n  // Switch to Base if the wallet is not on the current chain\n  if (chainId !== base.id) {\n    await switchChainAsync({ chainId: base.id });\n  }\n\n  await sendSwapTransactions({\n    config,\n    isSponsored,\n    paymaster,\n    sendCallsAsync,\n    sendTransactionAsync,\n    transactions,\n    updateLifecycleStatus,\n    walletCapabilities,\n  });\n}\n"],"names":[],"mappings":";;;;AAUA,eAAsB,uBAAuB;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAiC;AAC/B,QAAM,EAAE,aAAa,oBAAoB,MAAU,IAAA;AACnD,QAAM,eAAkC,CAAC;AAOzC,MAAI,yDAAoB,MAAM;AAC5B,iBAAa,KAAK;AAAA,MAChB,aAAa;AAAA,QACX,IAAI,mBAAmB;AAAA,QACvB,OAAO,mBAAmB;AAAA,QAC1B,MAAM,mBAAmB;AAAA,MAC3B;AAAA,MACA,iBAAiB;AAAA,IAAA,CAClB;AAOD,QAAI,CAAC,eAAe;AAClB,YAAM,qBAAqB,SAAS;AAAA,QAClC;AAAA,MAAA,CACD;AACD,YAAM,OAAO,mBAAmB;AAAA,QAC9B,KAAK;AAAA,QACL,cAAc;AAAA,QACd,MAAM;AAAA,UACJ,MAAM,KAAK;AAAA,UACX;AAAA,UACA,OAAO,MAAM,UAAU;AAAA,UACvB;AAAA;AAAA,QAAA;AAAA,MACF,CACD;AACD,mBAAa,KAAK;AAAA,QAChB,aAAa;AAAA,UACX,IAAI;AAAA,UACJ,OAAO;AAAA,UACP;AAAA,QACF;AAAA,QACA,iBAAiB;AAAA,MAAA,CAClB;AAAA,IAAA;AAAA,EACH;AAGF,eAAa,KAAK;AAAA,IAChB,aAAa;AAAA,MACX,IAAI,YAAY;AAAA,MAChB,OAAO,YAAY;AAAA,MACnB,MAAM,YAAY;AAAA,IACpB;AAAA,IACA,iBAAiB;AAAA,EAAA,CAClB;AAGG,MAAA,YAAY,KAAK,IAAI;AACvB,UAAM,iBAAiB,EAAE,SAAS,KAAK,IAAI;AAAA,EAAA;AAG7C,QAAM,qBAAqB;AAAA,IACzB;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AACH;"}