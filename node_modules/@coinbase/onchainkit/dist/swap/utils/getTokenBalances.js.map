{"version":3,"file":"getTokenBalances.js","sources":["../../../src/swap/utils/getTokenBalances.ts"],"sourcesContent":["import { formatUnits } from 'viem';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { Token } from '../../token';\n\ntype GetTokenBalancesParams = {\n  token?: Token;\n  tokenBalance?: bigint;\n  ethBalance?: bigint;\n};\n\nexport function getTokenBalances({\n  ethBalance,\n  token,\n  tokenBalance,\n}: GetTokenBalancesParams) {\n  if (token?.symbol === 'ETH' && (ethBalance || ethBalance === 0n)) {\n    const convertedBalance = formatUnits(ethBalance, token?.decimals);\n    return {\n      convertedBalance: formatUnits(ethBalance, token?.decimals),\n      roundedBalance: getRoundedAmount(convertedBalance, 8),\n    };\n  }\n  if (\n    token &&\n    token?.symbol !== 'ETH' &&\n    (tokenBalance || tokenBalance === 0n)\n  ) {\n    const convertedBalance = formatUnits(tokenBalance, token?.decimals);\n    return {\n      convertedBalance,\n      roundedBalance: getRoundedAmount(convertedBalance, 8),\n    };\n  }\n  return { convertedBalance: '', roundedBalance: '' };\n}\n"],"names":[],"mappings":";;AAUO,SAAS,iBAAiB;AAAA,EAC/B;AAAA,EACA;AAAA,EACA;AACF,GAA2B;AACzB,OAAI,+BAAO,YAAW,UAAU,cAAc,eAAe,KAAK;AAChE,UAAM,mBAAmB,YAAY,YAAY,+BAAO,QAAQ;AACzD,WAAA;AAAA,MACL,kBAAkB,YAAY,YAAY,+BAAO,QAAQ;AAAA,MACzD,gBAAgB,iBAAiB,kBAAkB,CAAC;AAAA,IACtD;AAAA,EAAA;AAEF,MACE,UACA,+BAAO,YAAW,UACjB,gBAAgB,iBAAiB,KAClC;AACA,UAAM,mBAAmB,YAAY,cAAc,+BAAO,QAAQ;AAC3D,WAAA;AAAA,MACL;AAAA,MACA,gBAAgB,iBAAiB,kBAAkB,CAAC;AAAA,IACtD;AAAA,EAAA;AAEF,SAAO,EAAE,kBAAkB,IAAI,gBAAgB,GAAG;AACpD;"}