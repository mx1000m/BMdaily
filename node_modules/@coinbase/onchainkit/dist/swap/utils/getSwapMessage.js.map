{"version":3,"file":"getSwapMessage.js","sources":["../../../src/swap/utils/getSwapMessage.ts"],"sourcesContent":["import { SwapMessage } from '../constants';\nimport type { GetSwapMessageParams } from '../types';\nimport { getErrorMessage } from './getErrorMessage';\n\nexport function getSwapMessage({\n  address,\n  from,\n  lifecycleStatus,\n  to,\n}: GetSwapMessageParams) {\n  // handle specific error codes\n  if (lifecycleStatus.statusName === 'error') {\n    return getErrorMessage(lifecycleStatus.statusData);\n  }\n\n  // handle balance error\n  if (from.error || to.error) {\n    return SwapMessage.BALANCE_ERROR;\n  }\n  // handle amount exceeds balance (if connected)\n  if (address && Number(from.balance) < Number(from.amount)) {\n    return SwapMessage.INSUFFICIENT_BALANCE;\n  }\n  // handle pending transaction\n  if (lifecycleStatus.statusName === 'transactionPending') {\n    return SwapMessage.CONFIRM_IN_WALLET;\n  }\n  // handle loading states\n  if (lifecycleStatus.statusName === 'transactionApproved') {\n    return SwapMessage.SWAP_IN_PROGRESS;\n  }\n  if (to.loading || from.loading) {\n    return SwapMessage.FETCHING_QUOTE;\n  }\n  // missing required fields\n  if (lifecycleStatus.statusData.isMissingRequiredField) {\n    return SwapMessage.INCOMPLETE_FIELD;\n  }\n\n  return '';\n}\n"],"names":[],"mappings":";;AAIO,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAyB;AAEnB,MAAA,gBAAgB,eAAe,SAAS;AACnC,WAAA,gBAAgB,gBAAgB,UAAU;AAAA,EAAA;AAI/C,MAAA,KAAK,SAAS,GAAG,OAAO;AAC1B,WAAO,YAAY;AAAA,EAAA;AAGjB,MAAA,WAAW,OAAO,KAAK,OAAO,IAAI,OAAO,KAAK,MAAM,GAAG;AACzD,WAAO,YAAY;AAAA,EAAA;AAGjB,MAAA,gBAAgB,eAAe,sBAAsB;AACvD,WAAO,YAAY;AAAA,EAAA;AAGjB,MAAA,gBAAgB,eAAe,uBAAuB;AACxD,WAAO,YAAY;AAAA,EAAA;AAEjB,MAAA,GAAG,WAAW,KAAK,SAAS;AAC9B,WAAO,YAAY;AAAA,EAAA;AAGjB,MAAA,gBAAgB,WAAW,wBAAwB;AACrD,WAAO,YAAY;AAAA,EAAA;AAGd,SAAA;AACT;"}