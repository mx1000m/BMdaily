'use client';
import { jsx, jsxs, Fragment } from "react/jsx-runtime";
import { useIsMounted } from "../../internal/hooks/useIsMounted.js";
import { useTheme } from "../../internal/hooks/useTheme.js";
import { cn, text, color, border, background } from "../../styles/theme.js";
import { FALLBACK_DEFAULT_MAX_SLIPPAGE } from "../constants.js";
import { SwapAmountInput } from "./SwapAmountInput.js";
import { SwapButton } from "./SwapButton.js";
import { SwapMessage } from "./SwapMessage.js";
import { SwapProvider } from "./SwapProvider.js";
import { SwapSettings } from "./SwapSettings.js";
import { SwapToast } from "./SwapToast.js";
import { SwapToggleButton } from "./SwapToggleButton.js";
function SwapDefaultContent({
  to,
  from,
  disabled
}) {
  return /* @__PURE__ */ jsxs(Fragment, { children: [
    /* @__PURE__ */ jsx(SwapSettings, {}),
    /* @__PURE__ */ jsx(
      SwapAmountInput,
      {
        label: "Sell",
        swappableTokens: from,
        token: from == null ? void 0 : from[0],
        type: "from"
      }
    ),
    /* @__PURE__ */ jsx(SwapToggleButton, {}),
    /* @__PURE__ */ jsx(
      SwapAmountInput,
      {
        label: "Buy",
        swappableTokens: to,
        token: to == null ? void 0 : to[0],
        type: "to"
      }
    ),
    /* @__PURE__ */ jsx(SwapButton, { disabled }),
    /* @__PURE__ */ jsx(SwapMessage, {}),
    /* @__PURE__ */ jsx(SwapToast, {})
  ] });
}
function Swap({
  children,
  config = {
    maxSlippage: FALLBACK_DEFAULT_MAX_SLIPPAGE
  },
  className,
  disabled,
  to,
  from,
  experimental = { useAggregator: false },
  isSponsored = false,
  onError,
  onStatus,
  onSuccess,
  title = "Swap",
  headerLeftContent
}) {
  const componentTheme = useTheme();
  const isMounted = useIsMounted();
  if (!isMounted) {
    return null;
  }
  return /* @__PURE__ */ jsx(
    SwapProvider,
    {
      config,
      experimental,
      isSponsored,
      onError,
      onStatus,
      onSuccess,
      children: /* @__PURE__ */ jsxs(
        "div",
        {
          className: cn(
            componentTheme,
            background.default,
            border.radius,
            color.foreground,
            "relative flex w-full max-w-[500px] flex-col px-6 pt-6 pb-4",
            className
          ),
          "data-testid": "ockSwap_Container",
          children: [
            /* @__PURE__ */ jsxs("div", { className: "absolute flex w-1/2 items-center justify-between", children: [
              headerLeftContent,
              /* @__PURE__ */ jsx(
                "h3",
                {
                  className: cn(text.title3, "text-center"),
                  "data-testid": "ockSwap_Title",
                  children: title
                }
              )
            ] }),
            children ?? /* @__PURE__ */ jsx(SwapDefaultContent, { to, from, disabled })
          ]
        }
      )
    }
  );
}
export {
  Swap
};
//# sourceMappingURL=Swap.js.map
