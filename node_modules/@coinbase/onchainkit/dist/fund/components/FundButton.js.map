{"version":3,"file":"FundButton.js","sources":["../../../src/fund/components/FundButton.tsx"],"sourcesContent":["'use client';\n\nimport { useCallback } from 'react';\nimport { useTheme } from '../../internal/hooks/useTheme';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\n\nimport { usePopupMonitor } from '@/buy/hooks/usePopupMonitor';\nimport { ErrorSvg } from '@/internal/svg/errorSvg';\nimport { openPopup } from '@/internal/utils/openPopup';\nimport { useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { Spinner } from '../../internal/components/Spinner';\nimport { AddSvg } from '../../internal/svg/addSvg';\nimport { SuccessSvg } from '../../internal/svg/successSvg';\nimport { background } from '../../styles/theme';\nimport { ConnectWallet } from '../../wallet/components/ConnectWallet';\nimport { useGetFundingUrl } from '../hooks/useGetFundingUrl';\nimport type { FundButtonReact } from '../types';\nimport { getFundingPopupSize } from '../utils/getFundingPopupSize';\n\nexport function FundButton({\n  className,\n  disabled = false,\n  fundingUrl,\n  hideIcon = false,\n  hideText = false,\n  openIn = 'popup',\n  popupSize = 'md',\n  rel,\n  target,\n  text: buttonText = 'Fund',\n  successText: buttonSuccessText = 'Success',\n  errorText: buttonErrorText = 'Something went wrong',\n  state: buttonState = 'default',\n  fiatCurrency = 'USD',\n  onPopupClose,\n  onClick,\n}: FundButtonReact) {\n  const componentTheme = useTheme();\n  // If the fundingUrl prop is undefined, fallback to our recommended funding URL based on the wallet type\n  const fallbackFundingUrl = useGetFundingUrl({\n    fiatCurrency,\n    originComponentName: 'FundButton',\n  });\n  const { address } = useAccount();\n  const fundingUrlToRender = fundingUrl ?? fallbackFundingUrl;\n  const isDisabled = disabled || !fundingUrlToRender;\n  const shouldShowConnectWallet = !address;\n\n  const { startPopupMonitor } = usePopupMonitor(onPopupClose);\n  const { sendAnalytics } = useAnalytics();\n\n  const handleAnalyticsInitiated = useCallback(() => {\n    sendAnalytics(FundEvent.FundInitiated, {\n      currency: fiatCurrency,\n    });\n  }, [sendAnalytics, fiatCurrency]);\n\n  const handleAnalyticsFailure = useCallback(\n    (error: string) => {\n      sendAnalytics(FundEvent.FundFailure, {\n        error,\n        metadata: { currency: fiatCurrency },\n      });\n    },\n    [sendAnalytics, fiatCurrency],\n  );\n\n  const handleClick = useCallback(\n    (e: React.MouseEvent) => {\n      e.preventDefault();\n\n      if (fundingUrlToRender) {\n        handleAnalyticsInitiated();\n        onClick?.();\n        const { height, width } = getFundingPopupSize(\n          popupSize,\n          fundingUrlToRender,\n        );\n        const popupWindow = openPopup({\n          url: fundingUrlToRender,\n          height,\n          width,\n          target,\n        });\n\n        if (popupWindow) {\n          startPopupMonitor(popupWindow);\n        } else {\n          handleAnalyticsFailure('Failed to open funding popup');\n        }\n      }\n    },\n    [\n      fundingUrlToRender,\n      popupSize,\n      target,\n      onClick,\n      startPopupMonitor,\n      handleAnalyticsInitiated,\n      handleAnalyticsFailure,\n    ],\n  );\n\n  const buttonColorClass = useMemo(() => {\n    if (buttonState === 'error') {\n      return background.error;\n    }\n    return pressable.primary;\n  }, [buttonState]);\n\n  const classNames = cn(\n    componentTheme,\n    buttonColorClass,\n    'px-4 py-3 inline-flex items-center justify-center space-x-2',\n    {\n      [pressable.disabled]: isDisabled,\n    },\n    text.headline,\n    border.radius,\n    color.inverse,\n    className,\n  );\n\n  const buttonIcon = useMemo(() => {\n    if (hideIcon) {\n      return null;\n    }\n    switch (buttonState) {\n      case 'loading':\n        return '';\n      case 'success':\n        return <SuccessSvg fill=\"#F9FAFB\" />;\n      case 'error':\n        return <ErrorSvg fill=\"#F9FAFB\" />;\n      default:\n        return <AddSvg />;\n    }\n  }, [buttonState, hideIcon]);\n\n  const buttonTextContent = useMemo(() => {\n    switch (buttonState) {\n      case 'loading':\n        return '';\n      case 'success':\n        return buttonSuccessText;\n      case 'error':\n        return buttonErrorText;\n      default:\n        return buttonText;\n    }\n  }, [buttonState, buttonSuccessText, buttonErrorText, buttonText]);\n\n  const buttonContent = useMemo(() => {\n    if (buttonState === 'loading') {\n      return <Spinner />;\n    }\n\n    return (\n      <>\n        {buttonIcon && (\n          <span\n            data-testid=\"ockFundButtonIcon\"\n            className=\"flex h-6 items-center\"\n          >\n            {buttonIcon}\n          </span>\n        )}\n        {hideText || (\n          <span data-testid=\"ockFundButtonTextContent\">\n            {buttonTextContent}\n          </span>\n        )}\n      </>\n    );\n  }, [buttonState, buttonIcon, buttonTextContent, hideText]);\n\n  if (openIn === 'tab') {\n    return (\n      <a\n        className={classNames}\n        href={fundingUrlToRender}\n        // If openIn is 'tab', default target to _blank so we don't accidentally navigate in the current tab\n        target={target ?? '_blank'}\n        rel={rel}\n      >\n        {buttonContent}\n      </a>\n    );\n  }\n\n  if (shouldShowConnectWallet) {\n    return <ConnectWallet className={cn('w-full', className)} />;\n  }\n\n  return (\n    <button\n      className={classNames}\n      onClick={handleClick}\n      type=\"button\"\n      disabled={isDisabled}\n      data-testid=\"ockFundButton\"\n    >\n      {buttonContent}\n    </button>\n  );\n}\n"],"names":[],"mappings":"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"}