{"version":3,"file":"FundCardAmountInput.js","sources":["../../../src/fund/components/FundCardAmountInput.tsx"],"sourcesContent":["'use client';\nimport { AmountInput } from '@/internal/components/amount-input/AmountInput';\nimport { useThrottle } from '@/internal/hooks/useThrottle';\nimport { useCallback } from 'react';\nimport { useAnalytics } from '../../core/analytics/hooks/useAnalytics';\nimport { FundEvent } from '../../core/analytics/types';\nimport { useOnrampExchangeRate } from '../hooks/useOnrampExchangeRate';\nimport type { FundCardAmountInputPropsReact } from '../types';\nimport { useFundContext } from './FundCardProvider';\n\nconst THROTTLE_DELAY_MS = 5000;\n\nexport const FundCardAmountInput = ({\n  className,\n}: FundCardAmountInputPropsReact) => {\n  const {\n    fundAmountFiat,\n    fundAmountCrypto,\n    asset,\n    selectedInputType,\n    currency,\n    exchangeRate,\n    setFundAmountFiat,\n    setFundAmountCrypto,\n    country,\n    subdivision,\n    setExchangeRate,\n    onError,\n  } = useFundContext();\n\n  const { fetchExchangeRate } = useOnrampExchangeRate({\n    asset,\n    currency,\n    country,\n    subdivision,\n    setExchangeRate,\n    onError,\n  });\n\n  const throttledFetchExchangeRate = useThrottle(\n    fetchExchangeRate,\n    THROTTLE_DELAY_MS,\n  );\n\n  const { sendAnalytics } = useAnalytics();\n\n  /**\n   * Handle amount changes with throttled updates\n   *\n   * Both setFiatAmount and setCryptoAmount on the AmountInput component are called with the new amount so we only need to fetch exchange rate when either is called.\n   */\n  const handleFiatAmountChange = useCallback(\n    (amount: string) => {\n      setFundAmountFiat(amount);\n      throttledFetchExchangeRate();\n\n      sendAnalytics(FundEvent.FundAmountChanged, {\n        amount: Number(amount),\n        currency,\n      });\n    },\n    [currency, sendAnalytics, setFundAmountFiat, throttledFetchExchangeRate],\n  );\n\n  return (\n    <AmountInput\n      fiatAmount={fundAmountFiat}\n      cryptoAmount={fundAmountCrypto}\n      asset={asset}\n      selectedInputType={selectedInputType}\n      currency={currency}\n      className={className}\n      setFiatAmount={handleFiatAmountChange}\n      setCryptoAmount={setFundAmountCrypto}\n      exchangeRate={String(exchangeRate)}\n    />\n  );\n};\n\nexport default FundCardAmountInput;\n"],"names":[],"mappings":";;;;;;;;AAUA,MAAM,oBAAoB;AAEnB,MAAM,sBAAsB,CAAC;AAAA,EAClC;AACF,MAAqC;AAC7B,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,MACE,eAAe;AAEb,QAAA,EAAE,kBAAkB,IAAI,sBAAsB;AAAA,IAClD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AAED,QAAM,6BAA6B;AAAA,IACjC;AAAA,IACA;AAAA,EACF;AAEM,QAAA,EAAE,cAAc,IAAI,aAAa;AAOvC,QAAM,yBAAyB;AAAA,IAC7B,CAAC,WAAmB;AAClB,wBAAkB,MAAM;AACG,iCAAA;AAE3B,oBAAc,UAAU,mBAAmB;AAAA,QACzC,QAAQ,OAAO,MAAM;AAAA,QACrB;AAAA,MAAA,CACD;AAAA,IACH;AAAA,IACA,CAAC,UAAU,eAAe,mBAAmB,0BAA0B;AAAA,EACzE;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,YAAY;AAAA,MACZ,cAAc;AAAA,MACd;AAAA,MACA;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf,iBAAiB;AAAA,MACjB,cAAc,OAAO,YAAY;AAAA,IAAA;AAAA,EACnC;AAEJ;"}