{"version":3,"file":"useOnrampExchangeRate.js","sources":["../../../src/fund/hooks/useOnrampExchangeRate.ts"],"sourcesContent":["import { useCallback, useMemo } from 'react';\nimport type { OnrampError } from '../types';\nimport { fetchOnrampQuote } from '../utils/fetchOnrampQuote';\n\nexport const useOnrampExchangeRate = ({\n  asset,\n  currency,\n  country,\n  subdivision,\n  setExchangeRate,\n  onError,\n}: {\n  asset: string;\n  currency: string;\n  country: string;\n  subdivision?: string;\n  setExchangeRate: (exchangeRate: number) => void;\n  onError?: (error: OnrampError) => void;\n}) => {\n  const fetchExchangeRate = useCallback(async () => {\n    try {\n      const quote = await fetchOnrampQuote({\n        purchaseCurrency: asset,\n        paymentCurrency: currency,\n        paymentAmount: '100',\n        paymentMethod: 'CARD',\n        country,\n        subdivision,\n      });\n\n      setExchangeRate(\n        Number(quote.purchaseAmount.value) /\n          Number(quote.paymentSubtotal.value),\n      );\n    } catch (err) {\n      if (err instanceof Error) {\n        console.error('Error fetching exchange rate:', err);\n        onError?.({\n          errorType: 'handled_error',\n          code: 'EXCHANGE_RATE_ERROR',\n          debugMessage: err.message,\n        });\n      } else {\n        console.error('Unknown error fetching exchange rate:', err);\n        onError?.({\n          errorType: 'unknown_error',\n          code: 'EXCHANGE_RATE_ERROR',\n          debugMessage: JSON.stringify(err),\n        });\n      }\n    }\n  }, [asset, country, subdivision, currency, onError, setExchangeRate]);\n\n  return useMemo(() => ({ fetchExchangeRate }), [fetchExchangeRate]);\n};\n"],"names":[],"mappings":";;AAIO,MAAM,wBAAwB,CAAC;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAOM;AACE,QAAA,oBAAoB,YAAY,YAAY;AAC5C,QAAA;AACI,YAAA,QAAQ,MAAM,iBAAiB;AAAA,QACnC,kBAAkB;AAAA,QAClB,iBAAiB;AAAA,QACjB,eAAe;AAAA,QACf,eAAe;AAAA,QACf;AAAA,QACA;AAAA,MAAA,CACD;AAED;AAAA,QACE,OAAO,MAAM,eAAe,KAAK,IAC/B,OAAO,MAAM,gBAAgB,KAAK;AAAA,MACtC;AAAA,aACO,KAAK;AACZ,UAAI,eAAe,OAAO;AAChB,gBAAA,MAAM,iCAAiC,GAAG;AACxC,2CAAA;AAAA,UACR,WAAW;AAAA,UACX,MAAM;AAAA,UACN,cAAc,IAAI;AAAA,QAAA;AAAA,MACnB,OACI;AACG,gBAAA,MAAM,yCAAyC,GAAG;AAChD,2CAAA;AAAA,UACR,WAAW;AAAA,UACX,MAAM;AAAA,UACN,cAAc,KAAK,UAAU,GAAG;AAAA,QAAA;AAAA,MACjC;AAAA,IACH;AAAA,EACF,GACC,CAAC,OAAO,SAAS,aAAa,UAAU,SAAS,eAAe,CAAC;AAEpE,SAAO,QAAQ,OAAO,EAAE,kBAAsB,IAAA,CAAC,iBAAiB,CAAC;AACnE;"}