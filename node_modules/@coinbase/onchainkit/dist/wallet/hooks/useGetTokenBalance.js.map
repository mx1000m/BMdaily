{"version":3,"file":"useGetTokenBalance.js","sources":["../../../src/wallet/hooks/useGetTokenBalance.ts"],"sourcesContent":["import { useMemo } from 'react';\nimport { erc20Abi, formatUnits } from 'viem';\nimport type { Address } from 'viem';\nimport { useReadContract } from 'wagmi';\nimport type { UseReadContractReturnType } from 'wagmi';\nimport { getRoundedAmount } from '../../internal/utils/getRoundedAmount';\nimport type { SwapError } from '../../swap';\nimport { getSwapErrorCode } from '../../swap/utils/getSwapErrorCode';\nimport type { Token } from '../../token';\nimport type { UseGetTokenBalanceResponse } from '../types';\n\nexport function useGetTokenBalance(\n  address?: Address,\n  token?: Token,\n): UseGetTokenBalanceResponse {\n  const tokenBalanceResponse: UseReadContractReturnType = useReadContract({\n    abi: erc20Abi,\n    address: token?.address as Address,\n    functionName: 'balanceOf',\n    args: address ? [address] : [],\n    query: {\n      enabled: !!token?.address && !!address,\n    },\n  });\n\n  return useMemo(() => {\n    let error: SwapError | undefined;\n    if (tokenBalanceResponse?.error) {\n      error = {\n        code: getSwapErrorCode('balance'),\n        error: tokenBalanceResponse?.error?.shortMessage,\n        message: '',\n      };\n    }\n    if (\n      (tokenBalanceResponse?.data !== 0n && !tokenBalanceResponse?.data) ||\n      !token\n    ) {\n      return {\n        convertedBalance: '',\n        status: tokenBalanceResponse.status,\n        error,\n        roundedBalance: '',\n        response: tokenBalanceResponse,\n        refetch: tokenBalanceResponse.refetch,\n      };\n    }\n    const convertedBalance = formatUnits(\n      tokenBalanceResponse?.data as bigint,\n      token?.decimals,\n    );\n    return {\n      convertedBalance,\n      status: tokenBalanceResponse.status,\n      error,\n      response: tokenBalanceResponse,\n      roundedBalance: getRoundedAmount(convertedBalance, 8),\n      refetch: tokenBalanceResponse.refetch,\n    };\n  }, [token, tokenBalanceResponse]);\n}\n"],"names":[],"mappings":";;;;;AAWgB,SAAA,mBACd,SACA,OAC4B;AAC5B,QAAM,uBAAkD,gBAAgB;AAAA,IACtE,KAAK;AAAA,IACL,SAAS,+BAAO;AAAA,IAChB,cAAc;AAAA,IACd,MAAM,UAAU,CAAC,OAAO,IAAI,CAAC;AAAA,IAC7B,OAAO;AAAA,MACL,SAAS,CAAC,EAAC,+BAAO,YAAW,CAAC,CAAC;AAAA,IAAA;AAAA,EACjC,CACD;AAED,SAAO,QAAQ,MAAM;;AACf,QAAA;AACJ,QAAI,6DAAsB,OAAO;AACvB,cAAA;AAAA,QACN,MAAM,iBAAiB,SAAS;AAAA,QAChC,QAAO,kEAAsB,UAAtB,mBAA6B;AAAA,QACpC,SAAS;AAAA,MACX;AAAA,IAAA;AAEF,SACG,6DAAsB,UAAS,MAAM,EAAC,6DAAsB,SAC7D,CAAC,OACD;AACO,aAAA;AAAA,QACL,kBAAkB;AAAA,QAClB,QAAQ,qBAAqB;AAAA,QAC7B;AAAA,QACA,gBAAgB;AAAA,QAChB,UAAU;AAAA,QACV,SAAS,qBAAqB;AAAA,MAChC;AAAA,IAAA;AAEF,UAAM,mBAAmB;AAAA,MACvB,6DAAsB;AAAA,MACtB,+BAAO;AAAA,IACT;AACO,WAAA;AAAA,MACL;AAAA,MACA,QAAQ,qBAAqB;AAAA,MAC7B;AAAA,MACA,UAAU;AAAA,MACV,gBAAgB,iBAAiB,kBAAkB,CAAC;AAAA,MACpD,SAAS,qBAAqB;AAAA,IAChC;AAAA,EAAA,GACC,CAAC,OAAO,oBAAoB,CAAC;AAClC;"}