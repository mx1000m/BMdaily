{"version":3,"file":"SendButton.js","sources":["../../../../../src/wallet/components/wallet-advanced-send/components/SendButton.tsx"],"sourcesContent":["'use client';\n\nimport type { PortfolioTokenWithFiatValue } from '@/api/types';\nimport type { LifecycleStatusUpdate } from '@/internal/types';\nimport { Transaction } from '@/transaction/components/Transaction';\nimport { TransactionButton } from '@/transaction/components/TransactionButton';\nimport { useTransactionContext } from '@/transaction/components/TransactionProvider';\nimport { TransactionStatus } from '@/transaction/components/TransactionStatus';\nimport { TransactionStatusAction } from '@/transaction/components/TransactionStatusAction';\nimport { TransactionStatusLabel } from '@/transaction/components/TransactionStatusLabel';\nimport type { LifecycleStatus } from '@/transaction/types';\nimport { useCallback } from 'react';\nimport { parseUnits } from 'viem';\nimport { type Chain, base } from 'viem/chains';\nimport { useWalletContext } from '../../WalletProvider';\nimport type { SendLifecycleStatus } from '../types';\nimport { defaultSendTxSuccessHandler } from '../utils/defaultSendTxSuccessHandler';\nimport { getSendCalldata } from '../utils/getSendCalldata';\nimport { useSendContext } from './SendProvider';\n\nexport function SendButton() {\n  const { chain: senderChain, isSponsored } = useWalletContext();\n  const {\n    recipientState,\n    cryptoAmount: inputAmount,\n    selectedToken,\n    updateLifecycleStatus,\n  } = useSendContext();\n\n  const { calldata, error } = getSendCalldata({\n    recipientAddress: recipientState.address,\n    token: selectedToken,\n    amount: inputAmount,\n  });\n\n  const disableSendButton =\n    Boolean(error) ||\n    !validateAmountInput({\n      inputAmount: inputAmount ?? '',\n      balance: BigInt(selectedToken?.cryptoBalance ?? 0),\n      selectedToken: selectedToken ?? undefined,\n    });\n\n  const buttonLabel = getDefaultSendButtonLabel(inputAmount, selectedToken);\n\n  const handleStatus = useCallback(\n    (status: LifecycleStatus) => {\n      const validStatuses = [\n        'transactionPending',\n        'transactionLegacyExecuted',\n        'success',\n        'error',\n      ] as const;\n      if (\n        validStatuses.includes(\n          status.statusName as (typeof validStatuses)[number],\n        )\n      ) {\n        updateLifecycleStatus(\n          status as LifecycleStatusUpdate<SendLifecycleStatus>,\n        );\n      }\n    },\n    [updateLifecycleStatus],\n  );\n\n  return (\n    <Transaction\n      isSponsored={isSponsored}\n      chainId={senderChain?.id ?? base.id}\n      calls={calldata ? [calldata] : []}\n      onStatus={handleStatus}\n    >\n      <SendTransactionButton\n        label={buttonLabel}\n        senderChain={senderChain}\n        disabled={disableSendButton}\n      />\n      <TransactionStatus>\n        <TransactionStatusLabel />\n        <TransactionStatusAction />\n      </TransactionStatus>\n    </Transaction>\n  );\n}\n\n/**\n * SendTransactionButton required to be a nested component in order to pull from TransactionContext.\n * Need to pull from TransactionContext in order to get transactionHash and transactionId.\n * Need transactionHash and transactionId in order to determine where to open the transaction in the wallet or explorer.\n */\nfunction SendTransactionButton({\n  label,\n  senderChain,\n  disabled,\n}: {\n  label: string;\n  senderChain?: Chain | null;\n  disabled?: boolean;\n}) {\n  const { address, setActiveFeature } = useWalletContext();\n  const { transactionHash, transactionId } = useTransactionContext();\n\n  const completionHandler = useCallback(() => {\n    setActiveFeature(null);\n  }, [setActiveFeature]);\n\n  const defaultSuccessOverride = {\n    onClick: defaultSendTxSuccessHandler({\n      transactionId,\n      transactionHash,\n      senderChain: senderChain ?? undefined,\n      address: address ?? undefined,\n      onComplete: completionHandler,\n    }),\n  };\n\n  return (\n    <TransactionButton\n      text={label}\n      successOverride={defaultSuccessOverride}\n      disabled={disabled}\n    />\n  );\n}\n\nfunction getDefaultSendButtonLabel(\n  cryptoAmount: string | null,\n  selectedToken: PortfolioTokenWithFiatValue | null,\n) {\n  if (!cryptoAmount) {\n    return 'Input amount';\n  }\n\n  if (!selectedToken) {\n    return 'Select token';\n  }\n\n  if (\n    parseUnits(cryptoAmount, selectedToken.decimals) >\n    selectedToken.cryptoBalance\n  ) {\n    return 'Insufficient balance';\n  }\n\n  return 'Continue';\n}\n\nfunction validateAmountInput({\n  inputAmount,\n  balance,\n  selectedToken,\n}: {\n  inputAmount?: string;\n  balance?: bigint;\n  selectedToken?: PortfolioTokenWithFiatValue;\n}) {\n  if (!inputAmount || !selectedToken || !balance) {\n    return false;\n  }\n\n  const parsedCryptoAmount = parseUnits(inputAmount, selectedToken.decimals);\n\n  return parsedCryptoAmount > 0n && parsedCryptoAmount <= balance;\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;;AAoBO,SAAS,aAAa;AAC3B,QAAM,EAAE,OAAO,aAAa,YAAA,IAAgB,iBAAiB;AACvD,QAAA;AAAA,IACJ;AAAA,IACA,cAAc;AAAA,IACd;AAAA,IACA;AAAA,MACE,eAAe;AAEnB,QAAM,EAAE,UAAU,MAAM,IAAI,gBAAgB;AAAA,IAC1C,kBAAkB,eAAe;AAAA,IACjC,OAAO;AAAA,IACP,QAAQ;AAAA,EAAA,CACT;AAED,QAAM,oBACJ,QAAQ,KAAK,KACb,CAAC,oBAAoB;AAAA,IACnB,aAAa,eAAe;AAAA,IAC5B,SAAS,QAAO,+CAAe,kBAAiB,CAAC;AAAA,IACjD,eAAe,iBAAiB;AAAA,EAAA,CACjC;AAEG,QAAA,cAAc,0BAA0B,aAAa,aAAa;AAExE,QAAM,eAAe;AAAA,IACnB,CAAC,WAA4B;AAC3B,YAAM,gBAAgB;AAAA,QACpB;AAAA,QACA;AAAA,QACA;AAAA,QACA;AAAA,MACF;AACA,UACE,cAAc;AAAA,QACZ,OAAO;AAAA,MAAA,GAET;AACA;AAAA,UACE;AAAA,QACF;AAAA,MAAA;AAAA,IAEJ;AAAA,IACA,CAAC,qBAAqB;AAAA,EACxB;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA,UAAS,2CAAa,OAAM,KAAK;AAAA,MACjC,OAAO,WAAW,CAAC,QAAQ,IAAI,CAAC;AAAA,MAChC,UAAU;AAAA,MAEV,UAAA;AAAA,QAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,OAAO;AAAA,YACP;AAAA,YACA,UAAU;AAAA,UAAA;AAAA,QACZ;AAAA,6BACC,mBACC,EAAA,UAAA;AAAA,UAAA,oBAAC,wBAAuB,EAAA;AAAA,8BACvB,yBAAwB,CAAA,CAAA;AAAA,QAAA,EAC3B,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACF;AAEJ;AAOA,SAAS,sBAAsB;AAAA,EAC7B;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,QAAM,EAAE,SAAS,iBAAiB,IAAI,iBAAiB;AACvD,QAAM,EAAE,iBAAiB,cAAc,IAAI,sBAAsB;AAE3D,QAAA,oBAAoB,YAAY,MAAM;AAC1C,qBAAiB,IAAI;AAAA,EAAA,GACpB,CAAC,gBAAgB,CAAC;AAErB,QAAM,yBAAyB;AAAA,IAC7B,SAAS,4BAA4B;AAAA,MACnC;AAAA,MACA;AAAA,MACA,aAAa,eAAe;AAAA,MAC5B,SAAS,WAAW;AAAA,MACpB,YAAY;AAAA,IACb,CAAA;AAAA,EACH;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,MAAM;AAAA,MACN,iBAAiB;AAAA,MACjB;AAAA,IAAA;AAAA,EACF;AAEJ;AAEA,SAAS,0BACP,cACA,eACA;AACA,MAAI,CAAC,cAAc;AACV,WAAA;AAAA,EAAA;AAGT,MAAI,CAAC,eAAe;AACX,WAAA;AAAA,EAAA;AAGT,MACE,WAAW,cAAc,cAAc,QAAQ,IAC/C,cAAc,eACd;AACO,WAAA;AAAA,EAAA;AAGF,SAAA;AACT;AAEA,SAAS,oBAAoB;AAAA,EAC3B;AAAA,EACA;AAAA,EACA;AACF,GAIG;AACD,MAAI,CAAC,eAAe,CAAC,iBAAiB,CAAC,SAAS;AACvC,WAAA;AAAA,EAAA;AAGT,QAAM,qBAAqB,WAAW,aAAa,cAAc,QAAQ;AAElE,SAAA,qBAAqB,MAAM,sBAAsB;AAC1D;"}