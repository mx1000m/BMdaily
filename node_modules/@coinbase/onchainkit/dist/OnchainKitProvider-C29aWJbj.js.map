{"version":3,"file":"OnchainKitProvider-C29aWJbj.js","sources":["../src/minikit/MiniKitProvider.tsx","../src/OnchainKitProvider.tsx"],"sourcesContent":["'use client';\nimport { DefaultOnchainKitProviders } from '@/DefaultOnchainKitProviders';\nimport { OnchainKitProvider } from '@/OnchainKitProvider';\nimport type { OnchainKitProviderReact } from '@/types';\nimport sdk, { type Context } from '@farcaster/frame-sdk';\nimport { farcasterFrame } from '@farcaster/miniapp-wagmi-connector';\nimport {\n  createContext,\n  useCallback,\n  useEffect,\n  useMemo,\n  useState,\n} from 'react';\nimport { coinbaseWallet } from 'wagmi/connectors';\nimport type {\n  MiniKitContextType,\n  MiniKitProviderReact,\n  UpdateClientContextParams,\n} from './types';\nimport { AutoConnect } from './components/AutoConnect';\n\nexport const emptyContext = {} as MiniKitContextType;\n\nexport const MiniKitContext = createContext<MiniKitContextType>(emptyContext);\n\n/**\n * Provides the MiniKit React Context to the app.\n */\nexport function MiniKitProvider({\n  children,\n  notificationProxyUrl = '/api/notify',\n  autoConnect = true,\n  ...onchainKitProps\n}: MiniKitProviderReact & OnchainKitProviderReact) {\n  const [context, setContext] = useState<Context.MiniAppContext | null>(null);\n\n  useEffect(() => {\n    sdk.on('miniAppAdded', ({ notificationDetails }) => {\n      if (notificationDetails) {\n        updateClientContext({\n          details: notificationDetails,\n          frameAdded: true,\n        });\n      }\n    });\n\n    sdk.on('miniAppAddRejected', ({ reason }) => {\n      console.error('Mini app add rejected', reason);\n    });\n\n    sdk.on('miniAppRemoved', () => {\n      updateClientContext({\n        details: undefined,\n        frameAdded: false,\n      });\n    });\n\n    sdk.on('notificationsEnabled', ({ notificationDetails }) => {\n      updateClientContext({\n        details: notificationDetails,\n      });\n    });\n\n    sdk.on('notificationsDisabled', () => {\n      updateClientContext({\n        details: undefined,\n      });\n    });\n\n    async function fetchContext() {\n      try {\n        // if not running in a mini app, context resolves as undefined\n        const context = await sdk.context;\n        setContext(context);\n      } catch (error) {\n        console.error('Error fetching context:', error);\n      }\n    }\n\n    fetchContext();\n\n    return () => {\n      sdk.removeAllListeners();\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const updateClientContext = useCallback(\n    ({ details, frameAdded }: UpdateClientContextParams) => {\n      setContext((prevContext) => {\n        if (!prevContext) {\n          return null;\n        }\n        return {\n          ...prevContext,\n          client: {\n            ...prevContext.client,\n            notificationDetails: details ?? undefined,\n            added: frameAdded ?? prevContext.client.added,\n          },\n        };\n      });\n    },\n    [],\n  );\n\n  const connectors = useMemo(() => {\n    return [\n      context // if context is set, the app is running in a frame, use farcasterFrame connector\n        ? farcasterFrame()\n        : coinbaseWallet({\n            appName: process.env.NEXT_PUBLIC_ONCHAINKIT_PROJECT_NAME,\n            appLogoUrl: process.env.NEXT_PUBLIC_ICON_URL,\n            preference: onchainKitProps.config?.wallet?.preference,\n          }),\n    ];\n  }, [context, onchainKitProps.config?.wallet?.preference]);\n\n  const value = useMemo(() => {\n    return {\n      context,\n      updateClientContext,\n      notificationProxyUrl,\n      __isMiniKit: true,\n    };\n  }, [updateClientContext, notificationProxyUrl, context]);\n\n  return (\n    <MiniKitContext.Provider value={value}>\n      <DefaultOnchainKitProviders connectors={connectors}>\n        <OnchainKitProvider {...onchainKitProps}>\n          <AutoConnect enabled={autoConnect}>\n            <div\n              style={{\n                paddingTop: context?.client.safeAreaInsets?.top ?? 0,\n                paddingBottom: context?.client.safeAreaInsets?.bottom ?? 0,\n                paddingLeft: context?.client.safeAreaInsets?.left ?? 0,\n                paddingRight: context?.client.safeAreaInsets?.right ?? 0,\n              }}\n            >\n              {children}\n            </div>\n          </AutoConnect>\n        </OnchainKitProvider>\n      </DefaultOnchainKitProviders>\n    </MiniKitContext.Provider>\n  );\n}\n","'use client';\nimport { setOnchainKitConfig } from '@/core/OnchainKitConfig';\nimport { useContext, useEffect, useMemo } from 'react';\nimport { DefaultOnchainKitProviders } from './DefaultOnchainKitProviders';\nimport OnchainKitProviderBoundary from './OnchainKitProviderBoundary';\nimport { DEFAULT_PRIVACY_URL, DEFAULT_TERMS_URL } from './core/constants';\nimport { COINBASE_VERIFIED_ACCOUNT_SCHEMA_ID } from './identity/constants';\nimport { checkHashLength } from './internal/utils/checkHashLength';\nimport type { OnchainKitProviderReact } from './types';\nimport { generateUUIDWithInsecureFallback } from './utils/crypto';\nimport { OnchainKitContext } from './useOnchainKit';\nimport { clientMetaManager } from './core/clientMeta/clientMetaManager';\nimport { MiniKitContext } from './minikit/MiniKitProvider';\n\n/**\n * Provides the OnchainKit React Context to the app.\n */\nexport function OnchainKitProvider({\n  address,\n  analytics,\n  apiKey,\n  chain,\n  children,\n  config,\n  projectId,\n  rpcUrl,\n  schemaId,\n}: OnchainKitProviderReact) {\n  if (schemaId && !checkHashLength(schemaId, 64)) {\n    throw Error('EAS schemaId must be 64 characters prefixed with \"0x\"');\n  }\n\n  const sessionId = useMemo(() => generateUUIDWithInsecureFallback(), []);\n  const isMiniKit = !!useContext(MiniKitContext)?.__isMiniKit;\n\n  useEffect(() => {\n    if (clientMetaManager.isInitialized()) return;\n    clientMetaManager.init({ isMiniKit });\n  }, [isMiniKit]);\n\n  // eslint-disable-next-line complexity\n  const value = useMemo(() => {\n    const defaultPaymasterUrl = apiKey\n      ? `https://api.developer.coinbase.com/rpc/v1/${chain.name\n          .replace(' ', '-')\n          .toLowerCase()}/${apiKey}`\n      : null;\n    const onchainKitConfig = {\n      address: address ?? null,\n      apiKey: apiKey ?? null,\n      chain: chain,\n      config: {\n        analytics: analytics ?? true,\n        analyticsUrl: config?.analyticsUrl ?? null,\n        appearance: {\n          name: config?.appearance?.name ?? 'Dapp',\n          logo: config?.appearance?.logo ?? '',\n          mode: config?.appearance?.mode ?? 'auto',\n          theme: config?.appearance?.theme ?? 'default',\n        },\n        paymaster: config?.paymaster || defaultPaymasterUrl,\n        wallet: {\n          display: config?.wallet?.display ?? 'classic',\n          preference: config?.wallet?.preference ?? 'all',\n          signUpEnabled: config?.wallet?.signUpEnabled ?? true,\n          termsUrl: config?.wallet?.termsUrl || DEFAULT_TERMS_URL,\n          privacyUrl: config?.wallet?.privacyUrl || DEFAULT_PRIVACY_URL,\n          supportedWallets: {\n            rabby: config?.wallet?.supportedWallets?.rabby ?? false,\n            trust: config?.wallet?.supportedWallets?.trust ?? false,\n            frame: config?.wallet?.supportedWallets?.frame ?? false,\n          },\n        },\n      },\n      projectId: projectId ?? null,\n      rpcUrl: rpcUrl ?? null,\n      schemaId: schemaId ?? COINBASE_VERIFIED_ACCOUNT_SCHEMA_ID,\n      sessionId,\n    };\n    setOnchainKitConfig(onchainKitConfig);\n    return onchainKitConfig;\n  }, [\n    address,\n    analytics,\n    apiKey,\n    chain,\n    config,\n    projectId,\n    rpcUrl,\n    schemaId,\n    sessionId,\n  ]);\n\n  return (\n    <OnchainKitContext.Provider value={value}>\n      <DefaultOnchainKitProviders>\n        <OnchainKitProviderBoundary>{children}</OnchainKitProviderBoundary>\n      </DefaultOnchainKitProviders>\n    </OnchainKitContext.Provider>\n  );\n}\n"],"names":["context","_b","_a"],"mappings":"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"}