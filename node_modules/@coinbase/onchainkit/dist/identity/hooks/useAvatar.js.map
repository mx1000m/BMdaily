{"version":3,"file":"useAvatar.js","sources":["../../../src/identity/hooks/useAvatar.ts"],"sourcesContent":["import { getAvatar } from '@/identity/utils/getAvatar';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetAvatarReturnType,\n  UseAvatarOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * Gets an ensName and resolves the Avatar\n */\nexport const useAvatar = (\n  { ensName, chain = mainnet }: UseAvatarOptions,\n  queryOptions?: UseQueryOptions<GetAvatarReturnType>,\n) => {\n  const queryKey = ['useAvatar', ensName, chain.id];\n\n  return useQuery<GetAvatarReturnType>({\n    queryKey,\n    queryFn: () => getAvatar({ ensName, chain }),\n    enabled: !!ensName,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":[],"mappings":";;;;AAaO,MAAM,YAAY,CACvB,EAAE,SAAS,QAAQ,QAAA,GACnB,iBACG;AACH,QAAM,WAAW,CAAC,aAAa,SAAS,MAAM,EAAE;AAEhD,SAAO,SAA8B;AAAA,IACnC;AAAA,IACA,SAAS,MAAM,UAAU,EAAE,SAAS,OAAO;AAAA,IAC3C,SAAS,CAAC,CAAC;AAAA,IACX,GAAG;AAAA;AAAA,IAEH,QAAQ,6CAAc;AAAA,IACtB,GAAG;AAAA,EAAA,CACJ;AACH;"}