{"version":3,"file":"useNames.js","sources":["../../../src/identity/hooks/useNames.ts"],"sourcesContent":["import { getNames } from '@/identity/utils/getNames';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport { mainnet } from 'viem/chains';\nimport type {\n  GetNameReturnType,\n  UseNamesOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * A React hook that leverages the `@tanstack/react-query` for fetching and optionally caching\n * multiple Basenames or ENS names in a single batch request.\n */\nexport const useNames = (\n  { addresses, chain = mainnet }: UseNamesOptions,\n  queryOptions?: UseQueryOptions<GetNameReturnType[]>,\n) => {\n  const addressesKey = addresses.join(',');\n  const queryKey = ['useNames', addressesKey, chain.id];\n\n  return useQuery<GetNameReturnType[]>({\n    queryKey,\n    queryFn: () => getNames({ addresses, chain }),\n    enabled: !!addresses.length,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":[],"mappings":";;;;AAcO,MAAM,WAAW,CACtB,EAAE,WAAW,QAAQ,QAAA,GACrB,iBACG;AACG,QAAA,eAAe,UAAU,KAAK,GAAG;AACvC,QAAM,WAAW,CAAC,YAAY,cAAc,MAAM,EAAE;AAEpD,SAAO,SAA8B;AAAA,IACnC;AAAA,IACA,SAAS,MAAM,SAAS,EAAE,WAAW,OAAO;AAAA,IAC5C,SAAS,CAAC,CAAC,UAAU;AAAA,IACrB,GAAG;AAAA;AAAA,IAEH,QAAQ,6CAAc;AAAA,IACtB,GAAG;AAAA,EAAA,CACJ;AACH;"}