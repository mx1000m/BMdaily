{"version":3,"file":"useAddresses.js","sources":["../../../src/identity/hooks/useAddresses.ts"],"sourcesContent":["import { getAddresses } from '@/identity/utils/getAddresses';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\nimport type {\n  GetAddressReturnType,\n  UseAddressesOptions,\n  UseQueryOptions,\n} from '../types';\n\n/**\n * A React hook that leverages the `@tanstack/react-query` for fetching and optionally caching\n * multiple Ethereum addresses from ENS names or Basenames in a single batch request.\n */\nexport const useAddresses = (\n  { names }: UseAddressesOptions,\n  queryOptions?: UseQueryOptions<GetAddressReturnType[]>,\n) => {\n  const namesKey = names.join(',');\n  const queryKey = ['useAddresses', namesKey];\n\n  return useQuery<GetAddressReturnType[]>({\n    queryKey,\n    queryFn: () => getAddresses({ names }),\n    enabled: !!names.length,\n    ...DEFAULT_QUERY_OPTIONS,\n    // Use cacheTime as gcTime for backward compatibility\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n};\n"],"names":[],"mappings":";;;AAaO,MAAM,eAAe,CAC1B,EAAE,SACF,iBACG;AACG,QAAA,WAAW,MAAM,KAAK,GAAG;AACzB,QAAA,WAAW,CAAC,gBAAgB,QAAQ;AAE1C,SAAO,SAAiC;AAAA,IACtC;AAAA,IACA,SAAS,MAAM,aAAa,EAAE,OAAO;AAAA,IACrC,SAAS,CAAC,CAAC,MAAM;AAAA,IACjB,GAAG;AAAA;AAAA,IAEH,QAAQ,6CAAc;AAAA,IACtB,GAAG;AAAA,EAAA,CACJ;AACH;"}