{"version":3,"file":"useAttestations.js","sources":["../../../src/identity/hooks/useAttestations.ts"],"sourcesContent":["import type {\n  Attestation,\n  UseAttestations,\n  UseQueryOptions,\n} from '@/identity/types';\nimport { getAttestations } from '@/identity/utils/getAttestations';\nimport { DEFAULT_QUERY_OPTIONS } from '@/internal/constants';\nimport { useQuery } from '@tanstack/react-query';\n\n/**\n * Fetches EAS Attestations for a given address, chain, and schemaId.\n */\nexport function useAttestations(\n  { address, chain, schemaId }: UseAttestations,\n  queryOptions?: UseQueryOptions<Attestation[]>,\n): Attestation[] {\n  const result = useQuery<Attestation[]>({\n    queryKey: ['useAttestations', address, chain?.id, schemaId],\n    queryFn: async () => {\n      return getAttestations(address, chain, { schemas: [schemaId!] });\n    },\n    enabled: !!address && !!schemaId,\n    ...DEFAULT_QUERY_OPTIONS,\n    gcTime: queryOptions?.cacheTime,\n    ...queryOptions,\n  });\n\n  return result.data || [];\n}\n"],"names":[],"mappings":";;;AAYO,SAAS,gBACd,EAAE,SAAS,OAAO,SAAA,GAClB,cACe;AACf,QAAM,SAAS,SAAwB;AAAA,IACrC,UAAU,CAAC,mBAAmB,SAAS,+BAAO,IAAI,QAAQ;AAAA,IAC1D,SAAS,YAAY;AACZ,aAAA,gBAAgB,SAAS,OAAO,EAAE,SAAS,CAAC,QAAS,GAAG;AAAA,IACjE;AAAA,IACA,SAAS,CAAC,CAAC,WAAW,CAAC,CAAC;AAAA,IACxB,GAAG;AAAA,IACH,QAAQ,6CAAc;AAAA,IACtB,GAAG;AAAA,EAAA,CACJ;AAEM,SAAA,OAAO,QAAQ,CAAC;AACzB;"}