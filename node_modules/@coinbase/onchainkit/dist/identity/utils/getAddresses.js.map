{"version":3,"file":"getAddresses.js","sources":["../../../src/identity/utils/getAddresses.ts"],"sourcesContent":["import { getChainPublicClient } from '@/core/network/getChainPublicClient';\nimport type { GetAddressReturnType, GetAddresses } from '@/identity/types';\nimport { mainnet } from 'viem/chains';\n\nconst mainnetClient = getChainPublicClient(mainnet);\n\n/**\n * An asynchronous function to fetch multiple Ethereum addresses from ENS names or Basenames\n * in a single batch request.\n */\nexport const getAddresses = async ({\n  names,\n}: GetAddresses): Promise<GetAddressReturnType[]> => {\n  if (!names || names.length === 0) {\n    return [];\n  }\n\n  const results: GetAddressReturnType[] = Array(names.length).fill(null);\n\n  try {\n    // Filter out null or undefined names\n    const validItems = names\n      .map((name, index) => (name ? { name, index } : null))\n      .filter((item): item is { name: string; index: number } => item !== null);\n\n    if (validItems.length === 0) {\n      return results;\n    }\n\n    const addressPromises = validItems.map(({ name, index }) =>\n      mainnetClient\n        .getEnsAddress({\n          name,\n        })\n        .then((address) => {\n          return { index, address };\n        })\n        .catch((error) => {\n          console.error(`Error resolving address for ${name}:`, error);\n          // Return null for the address if resolution fails\n          return { index, address: null };\n        }),\n    );\n\n    const resolvedAddresses = await Promise.all(addressPromises);\n\n    // Update results array with resolved addresses\n    resolvedAddresses.forEach(({ index, address }) => {\n      results[index] = address;\n    });\n  } catch (error) {\n    console.error('Error resolving addresses in batch:', error);\n    return Array(names.length).fill(null);\n  }\n\n  return results;\n};\n"],"names":[],"mappings":";;AAIA,MAAM,gBAAgB,qBAAqB,OAAO;AAM3C,MAAM,eAAe,OAAO;AAAA,EACjC;AACF,MAAqD;AACnD,MAAI,CAAC,SAAS,MAAM,WAAW,GAAG;AAChC,WAAO,CAAC;AAAA,EAAA;AAGV,QAAM,UAAkC,MAAM,MAAM,MAAM,EAAE,KAAK,IAAI;AAEjE,MAAA;AAEF,UAAM,aAAa,MAChB,IAAI,CAAC,MAAM,UAAW,OAAO,EAAE,MAAM,MAAA,IAAU,IAAK,EACpD,OAAO,CAAC,SAAkD,SAAS,IAAI;AAEtE,QAAA,WAAW,WAAW,GAAG;AACpB,aAAA;AAAA,IAAA;AAGT,UAAM,kBAAkB,WAAW;AAAA,MAAI,CAAC,EAAE,MAAM,YAC9C,cACG,cAAc;AAAA,QACb;AAAA,MAAA,CACD,EACA,KAAK,CAAC,YAAY;AACV,eAAA,EAAE,OAAO,QAAQ;AAAA,MAAA,CACzB,EACA,MAAM,CAAC,UAAU;AAChB,gBAAQ,MAAM,+BAA+B,IAAI,KAAK,KAAK;AAEpD,eAAA,EAAE,OAAO,SAAS,KAAK;AAAA,MAC/B,CAAA;AAAA,IACL;AAEA,UAAM,oBAAoB,MAAM,QAAQ,IAAI,eAAe;AAG3D,sBAAkB,QAAQ,CAAC,EAAE,OAAO,cAAc;AAChD,cAAQ,KAAK,IAAI;AAAA,IAAA,CAClB;AAAA,WACM,OAAO;AACN,YAAA,MAAM,uCAAuC,KAAK;AAC1D,WAAO,MAAM,MAAM,MAAM,EAAE,KAAK,IAAI;AAAA,EAAA;AAG/B,SAAA;AACT;"}