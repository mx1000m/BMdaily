{"version":3,"file":"IdentityProvider.js","sources":["../../../src/identity/components/IdentityProvider.tsx"],"sourcesContent":["import type {\n  IdentityContextType,\n  IdentityProviderReact,\n} from '@/identity/types';\nimport { useValue } from '@/internal/hooks/useValue';\nimport { useOnchainKit } from '@/useOnchainKit';\nimport { createContext, useContext } from 'react';\nimport type { Address } from 'viem';\n\nconst emptyContext = {} as IdentityContextType;\n\nexport const IdentityContext = createContext<IdentityContextType>(emptyContext);\n\nexport function useIdentityContext() {\n  return useContext(IdentityContext);\n}\n\nexport function IdentityProvider(props: IdentityProviderReact) {\n  const { chain: contextChain } = useOnchainKit();\n  const accountChain = props.chain ?? contextChain;\n\n  const value = useValue({\n    address: props.address || ('' as Address),\n    chain: accountChain,\n    schemaId: props.schemaId,\n  });\n\n  return (\n    <IdentityContext.Provider value={value}>\n      {props.children}\n    </IdentityContext.Provider>\n  );\n}\n"],"names":[],"mappings":";;;;AASA,MAAM,eAAe,CAAC;AAET,MAAA,kBAAkB,cAAmC,YAAY;AAEvE,SAAS,qBAAqB;AACnC,SAAO,WAAW,eAAe;AACnC;AAEO,SAAS,iBAAiB,OAA8B;AAC7D,QAAM,EAAE,OAAO,aAAa,IAAI,cAAc;AACxC,QAAA,eAAe,MAAM,SAAS;AAEpC,QAAM,QAAQ,SAAS;AAAA,IACrB,SAAS,MAAM,WAAY;AAAA,IAC3B,OAAO;AAAA,IACP,UAAU,MAAM;AAAA,EAAA,CACjB;AAED,6BACG,gBAAgB,UAAhB,EAAyB,OACvB,gBAAM,UACT;AAEJ;"}