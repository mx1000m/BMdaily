{"version":3,"file":"EthBalance.js","sources":["../../../src/identity/components/EthBalance.tsx"],"sourcesContent":["'use client';\nimport { useIdentityContext } from '@/identity/components/IdentityProvider';\nimport type { EthBalanceReact } from '@/identity/types';\nimport { getRoundedAmount } from '@/internal/utils/getRoundedAmount';\nimport { cn, color, text } from '../../styles/theme';\nimport { useGetETHBalance } from '../../wallet/hooks/useGetETHBalance';\n\nexport function EthBalance({ address, className }: EthBalanceReact) {\n  const { address: contextAddress } = useIdentityContext();\n  if (!contextAddress && !address) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or EthBalance component.',\n    );\n    return null;\n  }\n\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const { convertedBalance: balance, error } = useGetETHBalance(\n    address ?? contextAddress,\n  );\n\n  if (!balance || error) {\n    return null;\n  }\n\n  return (\n    <span\n      data-testid=\"ockEthBalance\"\n      className={cn(text.label2, color.foregroundMuted, className)}\n    >\n      {getRoundedAmount(balance, 4)} ETH\n    </span>\n  );\n}\n"],"names":[],"mappings":";;;;;AAOO,SAAS,WAAW,EAAE,SAAS,aAA8B;AAClE,QAAM,EAAE,SAAS,eAAe,IAAI,mBAAmB;AACnD,MAAA,CAAC,kBAAkB,CAAC,SAAS;AACvB,YAAA;AAAA,MACN;AAAA,IACF;AACO,WAAA;AAAA,EAAA;AAIT,QAAM,EAAE,kBAAkB,SAAS,MAAU,IAAA;AAAA,IAC3C,WAAW;AAAA,EACb;AAEI,MAAA,CAAC,WAAW,OAAO;AACd,WAAA;AAAA,EAAA;AAIP,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAY;AAAA,MACZ,WAAW,GAAG,KAAK,QAAQ,MAAM,iBAAiB,SAAS;AAAA,MAE1D,UAAA;AAAA,QAAA,iBAAiB,SAAS,CAAC;AAAA,QAAE;AAAA,MAAA;AAAA,IAAA;AAAA,EAChC;AAEJ;"}