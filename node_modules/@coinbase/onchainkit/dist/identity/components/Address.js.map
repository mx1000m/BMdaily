{"version":3,"file":"Address.js","sources":["../../../src/identity/components/Address.tsx"],"sourcesContent":["'use client';\n\nimport { copyToClipboard } from '@/internal/utils/copyToClipboard';\nimport { useState } from 'react';\nimport { border, cn, color, pressable, text } from '../../styles/theme';\nimport type { AddressReact } from '../types';\nimport { getSlicedAddress } from '../utils/getSlicedAddress';\nimport { useIdentityContext } from './IdentityProvider';\n\nexport function Address({\n  address = null,\n  className,\n  isSliced = true,\n  hasCopyAddressOnClick = true,\n}: AddressReact) {\n  const [copyText, setCopyText] = useState('Copy');\n  const { address: contextAddress } = useIdentityContext();\n  const accountAddress = address ?? contextAddress;\n\n  if (!accountAddress) {\n    console.error(\n      'Address: an Ethereum address must be provided to the Identity or Address component.',\n    );\n    return null;\n  }\n\n  const addressContent = isSliced\n    ? getSlicedAddress(accountAddress)\n    : accountAddress;\n\n  // Non-interactive version\n  if (!hasCopyAddressOnClick) {\n    return (\n      <span\n        data-testid=\"ockAddress\"\n        className={cn(color.foregroundMuted, text.label2, className)}\n      >\n        {addressContent}\n      </span>\n    );\n  }\n\n  // Interactive version with copy functionality\n  const handleClick = async () => {\n    await copyToClipboard({\n      copyValue: accountAddress,\n      onSuccess: () => {\n        setCopyText('Copied');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      },\n      onError: (err: unknown) => {\n        console.error('Failed to copy address:', err);\n        setCopyText('Failed to copy');\n        setTimeout(() => setCopyText('Copy'), 2000);\n      },\n    });\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter' || e.key === ' ') {\n      e.preventDefault();\n      handleClick();\n    }\n  };\n\n  return (\n    <span\n      data-testid=\"ockAddress\"\n      className={cn(\n        color.foregroundMuted,\n        text.label2,\n        className,\n        'group relative cursor-pointer',\n      )}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      tabIndex={0}\n      role=\"button\"\n      aria-label={`Copy address ${accountAddress}`}\n    >\n      {addressContent}\n      <button\n        type=\"button\"\n        className={cn(\n          pressable.alternate,\n          text.legal,\n          color.foreground,\n          border.default,\n          border.radius,\n          'absolute top-full left-[0%] z-10 mt-0.5 px-1.5 py-0.5 opacity-0 transition-opacity group-hover:opacity-100',\n        )}\n        aria-live=\"polite\"\n      >\n        {copyText}\n      </button>\n    </span>\n  );\n}\n"],"names":[],"mappings":";;;;;;AASO,SAAS,QAAQ;AAAA,EACtB,UAAU;AAAA,EACV;AAAA,EACA,WAAW;AAAA,EACX,wBAAwB;AAC1B,GAAiB;AACf,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,MAAM;AAC/C,QAAM,EAAE,SAAS,eAAe,IAAI,mBAAmB;AACvD,QAAM,iBAAiB,WAAW;AAElC,MAAI,CAAC,gBAAgB;AACX,YAAA;AAAA,MACN;AAAA,IACF;AACO,WAAA;AAAA,EAAA;AAGT,QAAM,iBAAiB,WACnB,iBAAiB,cAAc,IAC/B;AAGJ,MAAI,CAAC,uBAAuB;AAExB,WAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,eAAY;AAAA,QACZ,WAAW,GAAG,MAAM,iBAAiB,KAAK,QAAQ,SAAS;AAAA,QAE1D,UAAA;AAAA,MAAA;AAAA,IACH;AAAA,EAAA;AAKJ,QAAM,cAAc,YAAY;AAC9B,UAAM,gBAAgB;AAAA,MACpB,WAAW;AAAA,MACX,WAAW,MAAM;AACf,oBAAY,QAAQ;AACpB,mBAAW,MAAM,YAAY,MAAM,GAAG,GAAI;AAAA,MAC5C;AAAA,MACA,SAAS,CAAC,QAAiB;AACjB,gBAAA,MAAM,2BAA2B,GAAG;AAC5C,oBAAY,gBAAgB;AAC5B,mBAAW,MAAM,YAAY,MAAM,GAAG,GAAI;AAAA,MAAA;AAAA,IAC5C,CACD;AAAA,EACH;AAEM,QAAA,gBAAgB,CAAC,MAA2B;AAChD,QAAI,EAAE,QAAQ,WAAW,EAAE,QAAQ,KAAK;AACtC,QAAE,eAAe;AACL,kBAAA;AAAA,IAAA;AAAA,EAEhB;AAGE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,eAAY;AAAA,MACZ,WAAW;AAAA,QACT,MAAM;AAAA,QACN,KAAK;AAAA,QACL;AAAA,QACA;AAAA,MACF;AAAA,MACA,SAAS;AAAA,MACT,WAAW;AAAA,MACX,UAAU;AAAA,MACV,MAAK;AAAA,MACL,cAAY,gBAAgB,cAAc;AAAA,MAEzC,UAAA;AAAA,QAAA;AAAA,QACD;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,MAAK;AAAA,YACL,WAAW;AAAA,cACT,UAAU;AAAA,cACV,KAAK;AAAA,cACL,MAAM;AAAA,cACN,OAAO;AAAA,cACP,OAAO;AAAA,cACP;AAAA,YACF;AAAA,YACA,aAAU;AAAA,YAET,UAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MACH;AAAA,IAAA;AAAA,EACF;AAEJ;"}