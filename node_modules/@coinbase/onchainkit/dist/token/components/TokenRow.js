'use client';
import { jsxs, jsx } from "react/jsx-runtime";
import { memo } from "react";
import { useTheme } from "../../internal/hooks/useTheme.js";
import { cn, text, color, pressable } from "../../styles/theme.js";
import { formatAmount } from "../utils/formatAmount.js";
import { TokenImage } from "./TokenImage.js";
const TokenRow = memo(function TokenRow2({
  className,
  token,
  amount,
  onClick,
  hideImage,
  hideSymbol
}) {
  const componentTheme = useTheme();
  return /* @__PURE__ */ jsxs(
    "button",
    {
      "data-testid": "ockTokenRow_Container",
      type: "button",
      className: cn(
        componentTheme,
        pressable.default,
        "flex w-full items-center justify-between px-2 py-1",
        className
      ),
      onClick: () => onClick == null ? void 0 : onClick(token),
      children: [
        /* @__PURE__ */ jsxs("span", { className: "flex max-w-full items-center gap-3", children: [
          !hideImage && /* @__PURE__ */ jsx(TokenImage, { token, size: 28 }),
          /* @__PURE__ */ jsxs("span", { className: "flex min-w-0 flex-col items-start", children: [
            /* @__PURE__ */ jsx(
              "span",
              {
                className: cn(
                  text.headline,
                  "max-w-full overflow-hidden text-ellipsis whitespace-nowrap text-left"
                ),
                children: token.name.trim()
              }
            ),
            !hideSymbol && /* @__PURE__ */ jsx("span", { className: cn(text.body, color.foregroundMuted), children: token.symbol })
          ] })
        ] }),
        /* @__PURE__ */ jsx(
          "span",
          {
            "data-testid": "ockTokenRow_Amount",
            className: cn(text.body, color.foregroundMuted),
            children: formatAmount(amount, {
              minimumFractionDigits: 2,
              maximumFractionDigits: Number(amount) < 1 ? 5 : 2
            })
          }
        )
      ]
    }
  );
});
export {
  TokenRow
};
//# sourceMappingURL=TokenRow.js.map
