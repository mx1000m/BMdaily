'use client';
import { jsxs, jsx } from "react/jsx-runtime";
import { useState, useRef, useCallback } from "react";
import { DropdownMenu } from "../../internal/components/DropdownMenu.js";
import { cn, background, color, border } from "../../styles/theme.js";
import { TokenRow } from "./TokenRow.js";
import { TokenSelectButton } from "./TokenSelectButton.js";
function TokenSelectDropdown({
  options,
  setToken,
  token
}) {
  const [isOpen, setIsOpen] = useState(false);
  const buttonRef = useRef(null);
  const closeDropdown = useCallback(() => {
    setIsOpen(false);
  }, []);
  const toggleDropdown = useCallback(() => {
    setIsOpen((prev) => !prev);
  }, []);
  return /* @__PURE__ */ jsxs("div", { className: "relative max-w-fit shrink-0", children: [
    /* @__PURE__ */ jsx(
      TokenSelectButton,
      {
        ref: buttonRef,
        onClick: toggleDropdown,
        isOpen,
        token
      }
    ),
    /* @__PURE__ */ jsx(
      DropdownMenu,
      {
        trigger: buttonRef,
        isOpen,
        onClose: closeDropdown,
        align: "end",
        children: /* @__PURE__ */ jsx(
          "div",
          {
            "data-testid": "ockTokenSelectDropdown_List",
            className: cn(
              border.radius,
              color.foreground,
              "flex max-h-80 w-[200px] flex-col overflow-y-hidden",
              "ock-scrollbar"
            ),
            children: /* @__PURE__ */ jsx("div", { className: "overflow-y-auto", children: options.map((token2) => /* @__PURE__ */ jsx(
              TokenRow,
              {
                className: cn(background.inverse, "px-4 py-2"),
                token: token2,
                onClick: () => {
                  setToken(token2);
                  setIsOpen(false);
                }
              },
              token2.name + token2.address
            )) })
          }
        )
      }
    )
  ] });
}
export {
  TokenSelectDropdown
};
//# sourceMappingURL=TokenSelectDropdown.js.map
