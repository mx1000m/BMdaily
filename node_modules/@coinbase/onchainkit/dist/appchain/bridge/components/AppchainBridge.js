'use client';
import { jsx, jsxs } from "react/jsx-runtime";
import { useIsMounted } from "../../../internal/hooks/useIsMounted.js";
import { useTheme } from "../../../internal/hooks/useTheme.js";
import { cn, color, border, background, text } from "../../../styles/theme.js";
import { AppchainBridgeAddressInput } from "./AppchainBridgeAddressInput.js";
import { AppchainBridgeInput } from "./AppchainBridgeInput.js";
import { AppchainBridgeNetwork } from "./AppchainBridgeNetwork.js";
import { AppchainBridgeProvider, useAppchainBridgeContext } from "./AppchainBridgeProvider.js";
import { AppchainBridgeResumeTransaction } from "./AppchainBridgeResumeTransaction.js";
import { AppchainBridgeSuccess } from "./AppchainBridgeSuccess.js";
import { AppchainBridgeTransactionButton } from "./AppchainBridgeTransactionButton.js";
import { AppchainBridgeWithdraw } from "./AppchainBridgeWithdraw.js";
import { AppchainNetworkToggleButton } from "./AppchainNetworkToggleButton.js";
const AppchainBridgeDefaultContent = ({ title }) => {
  const {
    isAddressModalOpen,
    isWithdrawModalOpen,
    isSuccessModalOpen,
    isResumeTransactionModalOpen,
    setIsResumeTransactionModalOpen
  } = useAppchainBridgeContext();
  if (isResumeTransactionModalOpen) {
    return /* @__PURE__ */ jsx(
      "div",
      {
        className: "relative flex min-h-60",
        "data-testid": "ockAppchainBridge_ResumeTransaction",
        children: /* @__PURE__ */ jsx("div", { className: "w-full", children: /* @__PURE__ */ jsx(AppchainBridgeResumeTransaction, {}) })
      }
    );
  }
  if (isSuccessModalOpen) {
    return /* @__PURE__ */ jsx(
      "div",
      {
        className: "relative flex min-h-60",
        "data-testid": "ockAppchainBridge_Success",
        children: /* @__PURE__ */ jsx("div", { className: "w-full", children: /* @__PURE__ */ jsx(AppchainBridgeSuccess, {}) })
      }
    );
  }
  if (isWithdrawModalOpen) {
    return /* @__PURE__ */ jsx(
      "div",
      {
        className: "relative flex min-h-60",
        "data-testid": "ockAppchainBridge_Withdraw",
        children: /* @__PURE__ */ jsx("div", { className: "w-full", children: /* @__PURE__ */ jsx(AppchainBridgeWithdraw, {}) })
      }
    );
  }
  if (isAddressModalOpen) {
    return /* @__PURE__ */ jsx(
      "div",
      {
        className: "relative flex min-h-60",
        "data-testid": "ockAppchainBridge_Address",
        children: /* @__PURE__ */ jsx("div", { className: "w-full", children: /* @__PURE__ */ jsx(AppchainBridgeAddressInput, {}) })
      }
    );
  }
  return /* @__PURE__ */ jsx(
    "div",
    {
      className: "relative flex min-h-60",
      "data-testid": "ockAppchainBridge_DefaultContent",
      children: /* @__PURE__ */ jsxs("div", { className: "w-full", children: [
        /* @__PURE__ */ jsxs("div", { className: "relative mb-4 flex items-center justify-between", children: [
          /* @__PURE__ */ jsx("h3", { className: cn(text.title3), "data-testid": "ockSwap_Title", children: title }),
          /* @__PURE__ */ jsx(
            "span",
            {
              className: cn(
                text.label2,
                color.foregroundMuted,
                "absolute right-0"
              ),
              children: /* @__PURE__ */ jsx(
                "button",
                {
                  type: "button",
                  onClick: () => {
                    setIsResumeTransactionModalOpen(true);
                  },
                  children: "Resume"
                }
              )
            }
          )
        ] }),
        /* @__PURE__ */ jsxs("div", { className: "relative flex flex-col gap-2", children: [
          /* @__PURE__ */ jsxs("div", { className: "flex items-center gap-2 rounded-lg", children: [
            /* @__PURE__ */ jsx(AppchainBridgeNetwork, { type: "from", label: "From" }),
            /* @__PURE__ */ jsx(AppchainNetworkToggleButton, {}),
            /* @__PURE__ */ jsx(AppchainBridgeNetwork, { type: "to", label: "To" })
          ] }),
          /* @__PURE__ */ jsx(AppchainBridgeInput, {}),
          /* @__PURE__ */ jsx(AppchainBridgeTransactionButton, {})
        ] })
      ] })
    }
  );
};
function AppchainBridge({
  chain,
  appchain,
  title = "Bridge",
  bridgeableTokens,
  children = /* @__PURE__ */ jsx(AppchainBridgeDefaultContent, { title }),
  className,
  handleFetchPrice
}) {
  const isMounted = useIsMounted();
  const componentTheme = useTheme();
  if (!isMounted) {
    return null;
  }
  return /* @__PURE__ */ jsx(
    AppchainBridgeProvider,
    {
      chain,
      appchain,
      bridgeableTokens,
      handleFetchPrice,
      children: /* @__PURE__ */ jsx(
        "div",
        {
          className: cn(
            componentTheme,
            background.default,
            border.radius,
            color.foreground,
            "ock-border-line-default flex w-full flex-col border px-6 pt-6 pb-4",
            className
          ),
          "data-testid": "ockAppchainBridge_Container",
          children
        }
      )
    }
  );
}
export {
  AppchainBridge
};
//# sourceMappingURL=AppchainBridge.js.map
