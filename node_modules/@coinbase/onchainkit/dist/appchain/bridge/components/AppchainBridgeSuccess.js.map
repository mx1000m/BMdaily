{"version":3,"file":"AppchainBridgeSuccess.js","sources":["../../../../src/appchain/bridge/components/AppchainBridgeSuccess.tsx"],"sourcesContent":["'use client';\nimport { SuccessSvg } from '@/internal/svg/fullWidthSuccessSvg';\nimport { border, cn, color, pressable, text } from '@/styles/theme';\nimport type { AppchainBridgeSuccessReact } from '../types';\nimport { useAppchainBridgeContext } from './AppchainBridgeProvider';\n\nexport const AppchainBridgeSuccess = ({\n  title = 'Success!',\n  primaryButtonLabel = 'View Transaction',\n  secondaryButtonLabel = 'Back to bridge',\n}: AppchainBridgeSuccessReact) => {\n  const { handleOpenExplorer, handleResetState } = useAppchainBridgeContext();\n\n  return (\n    <div className=\"flex h-full w-full flex-col justify-between\">\n      <div>\n        <div className=\"flex items-center\" />\n      </div>\n      <div className=\"mt-16 px-4\">\n        <div className=\"flex flex-col items-center gap-16\">\n          <div className=\"mb-6 flex flex-col items-center gap-4\">\n            <div className=\"flex justify-center\">\n              <div className=\"h-12 w-12\">\n                <SuccessSvg fill=\"var(--ock-bg-primary)\" />\n              </div>\n            </div>\n            <div className=\"ock-text-foreground flex-1 text-center font-medium text-sm\">\n              {title}\n            </div>\n          </div>\n          <div className=\"flex w-full flex-col items-center gap-2\">\n            {[\n              {\n                label: primaryButtonLabel,\n                action: handleOpenExplorer,\n                variant: 'primary',\n                textColor: color.inverse,\n              },\n              {\n                label: secondaryButtonLabel,\n                action: handleResetState,\n                variant: 'secondary',\n                textColor: color.foreground,\n              },\n            ].map(({ label, action, variant, textColor }) => (\n              <button\n                key={label}\n                className={cn(\n                  pressable[variant as keyof typeof pressable],\n                  border.radius,\n                  'w-full rounded-xl',\n                  'px-4 py-3 text-base text-white leading-6',\n                  text.label1,\n                )}\n                type=\"button\"\n                onClick={action}\n              >\n                <div\n                  className={cn(\n                    text.headline,\n                    textColor,\n                    'flex justify-center',\n                  )}\n                >\n                  {label}\n                </div>\n              </button>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n"],"names":[],"mappings":";;;;AAMO,MAAM,wBAAwB,CAAC;AAAA,EACpC,QAAQ;AAAA,EACR,qBAAqB;AAAA,EACrB,uBAAuB;AACzB,MAAkC;AAChC,QAAM,EAAE,oBAAoB,iBAAiB,IAAI,yBAAyB;AAGxE,SAAA,qBAAC,OAAI,EAAA,WAAU,+CACb,UAAA;AAAA,IAAA,oBAAC,OACC,EAAA,UAAA,oBAAC,OAAI,EAAA,WAAU,oBAAoB,CAAA,GACrC;AAAA,wBACC,OAAI,EAAA,WAAU,cACb,UAAC,qBAAA,OAAA,EAAI,WAAU,qCACb,UAAA;AAAA,MAAC,qBAAA,OAAA,EAAI,WAAU,yCACb,UAAA;AAAA,QAAA,oBAAC,OAAI,EAAA,WAAU,uBACb,UAAA,oBAAC,OAAI,EAAA,WAAU,aACb,UAAA,oBAAC,YAAW,EAAA,MAAK,wBAAwB,CAAA,EAC3C,CAAA,GACF;AAAA,QACC,oBAAA,OAAA,EAAI,WAAU,8DACZ,UACH,MAAA,CAAA;AAAA,MAAA,GACF;AAAA,MACA,oBAAC,OAAI,EAAA,WAAU,2CACZ,UAAA;AAAA,QACC;AAAA,UACE,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAW,MAAM;AAAA,QACnB;AAAA,QACA;AAAA,UACE,OAAO;AAAA,UACP,QAAQ;AAAA,UACR,SAAS;AAAA,UACT,WAAW,MAAM;AAAA,QAAA;AAAA,MACnB,EACA,IAAI,CAAC,EAAE,OAAO,QAAQ,SAAS,gBAC/B;AAAA,QAAC;AAAA,QAAA;AAAA,UAEC,WAAW;AAAA,YACT,UAAU,OAAiC;AAAA,YAC3C,OAAO;AAAA,YACP;AAAA,YACA;AAAA,YACA,KAAK;AAAA,UACP;AAAA,UACA,MAAK;AAAA,UACL,SAAS;AAAA,UAET,UAAA;AAAA,YAAC;AAAA,YAAA;AAAA,cACC,WAAW;AAAA,gBACT,KAAK;AAAA,gBACL;AAAA,gBACA;AAAA,cACF;AAAA,cAEC,UAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QACH;AAAA,QAnBK;AAAA,MAAA,CAqBR,EACH,CAAA;AAAA,IAAA,EAAA,CACF,EACF,CAAA;AAAA,EAAA,GACF;AAEJ;"}