'use client';
import { jsxs, jsx } from "react/jsx-runtime";
import { PressableIcon } from "../../../internal/components/PressableIcon.js";
import { TextInput } from "../../../internal/components/TextInput.js";
import { backArrowSvg } from "../../../internal/svg/backArrowSvg.js";
import { cn, color, text, background, border, pressable } from "../../../styles/theme.js";
import { useState } from "react";
import { useAppchainBridgeContext } from "./AppchainBridgeProvider.js";
const AppchainBridgeResumeTransaction = () => {
  const { setIsResumeTransactionModalOpen, handleResumeTransaction } = useAppchainBridgeContext();
  const [withdrawalTxHash, setWithdrawalTxHash] = useState(null);
  const [invalidInput, setInvalidInput] = useState(false);
  const backButton = /* @__PURE__ */ jsx(
    PressableIcon,
    {
      ariaLabel: "Back button",
      onClick: () => {
        setIsResumeTransactionModalOpen(false);
      },
      children: /* @__PURE__ */ jsx("div", { className: "p-2", children: backArrowSvg })
    }
  );
  return /* @__PURE__ */ jsxs("div", { className: "flex h-full w-full flex-col justify-between", children: [
    /* @__PURE__ */ jsxs("div", { children: [
      /* @__PURE__ */ jsxs("div", { className: "flex items-center", children: [
        backButton,
        /* @__PURE__ */ jsx("h2", { className: "ock-text-foreground flex-1 text-center font-medium text-md", children: "Resume Transaction" })
      ] }),
      /* @__PURE__ */ jsxs(
        "div",
        {
          className: cn(
            background.secondary,
            border.radius,
            "box-border flex h-20 w-full flex-col items-start justify-center gap-2 p-4",
            "mt-4"
          ),
          children: [
            /* @__PURE__ */ jsx(
              "span",
              {
                className: cn(
                  text.label2,
                  color.foregroundMuted,
                  "flex items-center gap-1"
                ),
                children: "Transaction hash"
              }
            ),
            /* @__PURE__ */ jsx(
              TextInput,
              {
                className: cn(
                  text.label2,
                  color.foregroundMuted,
                  background.secondary,
                  "w-full border-none",
                  "focus:border-none focus:outline-none focus:ring-0"
                ),
                placeholder: "0x...",
                onChange: (value) => {
                  setWithdrawalTxHash(value);
                },
                value: withdrawalTxHash || ""
              }
            )
          ]
        }
      ),
      withdrawalTxHash && invalidInput && /* @__PURE__ */ jsx("div", { className: "mt-2 flex", children: /* @__PURE__ */ jsx("p", { className: "text-foregroundMuted text-red-500 text-sm", children: "Please enter a valid transaction hash" }) })
    ] }),
    /* @__PURE__ */ jsx("div", { className: "flex w-full justify-between", children: /* @__PURE__ */ jsx(
      "button",
      {
        type: "button",
        className: cn(
          pressable.primary,
          "w-full rounded-xl px-4 py-3 font-medium text-base leading-6",
          "text-center"
        ),
        onClick: () => {
          if (!(withdrawalTxHash == null ? void 0 : withdrawalTxHash.startsWith("0x")) || withdrawalTxHash.length !== 66) {
            setInvalidInput(true);
            return;
          }
          handleResumeTransaction(withdrawalTxHash);
        },
        children: /* @__PURE__ */ jsx(
          "div",
          {
            className: cn(text.headline, color.inverse, "flex justify-center"),
            children: "Resume Transaction"
          }
        )
      }
    ) })
  ] });
};
export {
  AppchainBridgeResumeTransaction
};
//# sourceMappingURL=AppchainBridgeResumeTransaction.js.map
