{"version":3,"file":"constants.js","sources":["../../../src/appchain/bridge/constants.ts"],"sourcesContent":["import type { Token } from '@/token';\nimport {\n  ethSepoliaToken,\n  ethToken,\n  usdcSepoliaToken,\n  usdcToken,\n} from '@/token/constants';\nimport type { Address, Hex } from 'viem';\nimport { base, baseSepolia } from 'viem/chains';\nimport type { BridgeableToken } from './types';\n\nexport const APPCHAIN_BRIDGE_ADDRESS =\n  '0x4200000000000000000000000000000000000010';\n\nexport const APPCHAIN_L2_TO_L1_MESSAGE_PASSER_ADDRESS =\n  '0x4200000000000000000000000000000000000016';\n\nexport const APPCHAIN_DEPLOY_CONTRACT_ADDRESS: Record<number, Address> = {\n  [base.id]: '0xe8c6D9460Ce61D260260d27f30bde8b8d1a8341e',\n  [baseSepolia.id]: '0x948DCF664178aFF14733C4Cc2dAbA44bCCaf8230',\n};\n\nexport const ETH_BY_CHAIN: Record<number, Token> = {\n  [base.id]: ethToken,\n  [baseSepolia.id]: ethSepoliaToken,\n};\n\nexport const USDC_BY_CHAIN: Record<number, Token> = {\n  [base.id]: usdcToken,\n  [baseSepolia.id]: usdcSepoliaToken,\n};\n\nexport const DEFAULT_BRIDGEABLE_TOKENS = [\n  {\n    ...ETH_BY_CHAIN[8453],\n    remoteToken: ETH_BY_CHAIN[8453].address,\n  } as BridgeableToken,\n];\n\nexport const MIN_GAS_LIMIT = 100000;\nexport const EXTRA_DATA = '0x6f6e636861696e6b6974';\nexport const OUTPUT_ROOT_PROOF_VERSION =\n  '0x0000000000000000000000000000000000000000000000000000000000000000' as Hex;\n"],"names":[],"mappings":";;AAWO,MAAM,0BACX;AAEK,MAAM,2CACX;AAEK,MAAM,mCAA4D;AAAA,EACvE,CAAC,KAAK,EAAE,GAAG;AAAA,EACX,CAAC,YAAY,EAAE,GAAG;AACpB;AAEO,MAAM,eAAsC;AAAA,EACjD,CAAC,KAAK,EAAE,GAAG;AAAA,EACX,CAAC,YAAY,EAAE,GAAG;AACpB;AAEO,MAAM,gBAAuC;AAAA,EAClD,CAAC,KAAK,EAAE,GAAG;AAAA,EACX,CAAC,YAAY,EAAE,GAAG;AACpB;AAEO,MAAM,4BAA4B;AAAA,EACvC;AAAA,IACE,GAAG,aAAa,IAAI;AAAA,IACpB,aAAa,aAAa,IAAI,EAAE;AAAA,EAAA;AAEpC;AAEO,MAAM,gBAAgB;AACtB,MAAM,aAAa;AACnB,MAAM,4BACX;"}