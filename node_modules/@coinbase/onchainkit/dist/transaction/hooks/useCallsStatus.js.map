{"version":3,"file":"useCallsStatus.js","sources":["../../../src/transaction/hooks/useCallsStatus.ts"],"sourcesContent":["import { useCallsStatus as useCallsStatusWagmi } from 'wagmi/experimental';\nimport type { UseCallsStatusParams } from '../types';\nimport { normalizeStatus } from '@/internal/utils/normalizeWagmi';\n\nexport function useCallsStatus({\n  setLifecycleStatus,\n  transactionId,\n}: UseCallsStatusParams) {\n  try {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const { data } = useCallsStatusWagmi({\n      id: transactionId,\n      query: {\n        refetchInterval: (query) => {\n          return normalizeStatus(query.state.data?.status) === 'success'\n            ? false\n            : 1000;\n        },\n        enabled: !!transactionId,\n      },\n    });\n    const transactionHash = data?.receipts?.[0]?.transactionHash;\n    return { status: data?.status, transactionHash };\n  } catch (err) {\n    setLifecycleStatus({\n      statusName: 'error',\n      statusData: {\n        code: 'TmUCSh01',\n        error: JSON.stringify(err),\n        message: '',\n      },\n    });\n    return { status: 'error', transactionHash: undefined };\n  }\n}\n"],"names":["useCallsStatusWagmi","_a"],"mappings":";;AAIO,SAAS,eAAe;AAAA,EAC7B;AAAA,EACA;AACF,GAAyB;;AACnB,MAAA;AAEI,UAAA,EAAE,KAAK,IAAIA,iBAAoB;AAAA,MACnC,IAAI;AAAA,MACJ,OAAO;AAAA,QACL,iBAAiB,CAAC,UAAU;;AAC1B,iBAAO,iBAAgBC,MAAA,MAAM,MAAM,SAAZ,gBAAAA,IAAkB,MAAM,MAAM,YACjD,QACA;AAAA,QACN;AAAA,QACA,SAAS,CAAC,CAAC;AAAA,MAAA;AAAA,IACb,CACD;AACD,UAAM,mBAAkB,wCAAM,aAAN,mBAAiB,OAAjB,mBAAqB;AAC7C,WAAO,EAAE,QAAQ,6BAAM,QAAQ,gBAAgB;AAAA,WACxC,KAAK;AACO,uBAAA;AAAA,MACjB,YAAY;AAAA,MACZ,YAAY;AAAA,QACV,MAAM;AAAA,QACN,OAAO,KAAK,UAAU,GAAG;AAAA,QACzB,SAAS;AAAA,MAAA;AAAA,IACX,CACD;AACD,WAAO,EAAE,QAAQ,SAAS,iBAAiB,OAAU;AAAA,EAAA;AAEzD;"}