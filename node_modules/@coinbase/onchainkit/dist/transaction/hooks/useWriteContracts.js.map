{"version":3,"file":"useWriteContracts.js","sources":["../../../src/transaction/hooks/useWriteContracts.ts"],"sourcesContent":["import { useWriteContracts as useWriteContractsWagmi } from 'wagmi/experimental';\nimport {\n  GENERIC_ERROR_MESSAGE,\n  METHOD_NOT_SUPPORTED_ERROR_SUBSTRING,\n} from '../constants';\nimport type { UseWriteContractsParams } from '../types';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\nimport { normalizeTransactionId } from '@/internal/utils/normalizeWagmi';\n\n/**\n * useWriteContracts: Experimental Wagmi hook for batching transactions.\n * Supports Smart Wallets.\n * Supports batch operations and capabilities such as paymasters.\n * Does not support EOAs.\n */\nexport function useWriteContracts({\n  setLifecycleStatus,\n  setTransactionId,\n}: UseWriteContractsParams) {\n  const { status, writeContractsAsync } = useWriteContractsWagmi({\n    mutation: {\n      onError: (e) => {\n        // Ignore EOA-specific error to fallback to writeContract\n        if (e.message.includes(METHOD_NOT_SUPPORTED_ERROR_SUBSTRING)) {\n          return;\n        }\n        const errorMessage = isUserRejectedRequestError(e)\n          ? 'Request denied.'\n          : GENERIC_ERROR_MESSAGE;\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmUWCSh01', // Transaction module UseWriteContracts hook 01 error\n            error: e.message,\n            message: errorMessage,\n          },\n        });\n      },\n      onSuccess: (data) => {\n        setTransactionId(normalizeTransactionId(data));\n      },\n    },\n  });\n  return { status, writeContractsAsync };\n}\n"],"names":["useWriteContractsWagmi"],"mappings":";;;;AAeO,SAAS,kBAAkB;AAAA,EAChC;AAAA,EACA;AACF,GAA4B;AAC1B,QAAM,EAAE,QAAQ,oBAAoB,IAAIA,oBAAuB;AAAA,IAC7D,UAAU;AAAA,MACR,SAAS,CAAC,MAAM;AAEd,YAAI,EAAE,QAAQ,SAAS,oCAAoC,GAAG;AAC5D;AAAA,QAAA;AAEF,cAAM,eAAe,2BAA2B,CAAC,IAC7C,oBACA;AACe,2BAAA;AAAA,UACjB,YAAY;AAAA,UACZ,YAAY;AAAA,YACV,MAAM;AAAA;AAAA,YACN,OAAO,EAAE;AAAA,YACT,SAAS;AAAA,UAAA;AAAA,QACX,CACD;AAAA,MACH;AAAA,MACA,WAAW,CAAC,SAAS;AACF,yBAAA,uBAAuB,IAAI,CAAC;AAAA,MAAA;AAAA,IAC/C;AAAA,EACF,CACD;AACM,SAAA,EAAE,QAAQ,oBAAoB;AACvC;"}