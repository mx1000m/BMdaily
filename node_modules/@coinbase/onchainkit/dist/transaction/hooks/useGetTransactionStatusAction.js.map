{"version":3,"file":"useGetTransactionStatusAction.js","sources":["../../../src/transaction/hooks/useGetTransactionStatusAction.tsx"],"sourcesContent":["import { useMemo } from 'react';\nimport type { ReactNode } from 'react';\nimport { useChainId } from 'wagmi';\nimport { useShowCallsStatus } from 'wagmi/experimental';\nimport { getChainExplorer } from '../../core/network/getChainExplorer';\nimport { cn, color, text } from '../../styles/theme';\nimport { useTransactionContext } from '../components/TransactionProvider';\n\nexport function useGetTransactionStatusAction() {\n  const { chainId, receipt, transactionHash, transactionId } =\n    useTransactionContext();\n  // eslint-disable-next-line react-hooks/rules-of-hooks\n  const accountChainId = chainId ?? useChainId();\n\n  const { showCallsStatus } = useShowCallsStatus();\n\n  return useMemo(() => {\n    const chainExplorer = getChainExplorer(accountChainId);\n\n    let actionElement: ReactNode = null;\n\n    // EOA will have txn hash\n    if (transactionHash) {\n      actionElement = (\n        <a\n          href={`${chainExplorer}/tx/${transactionHash}`}\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          <span className={cn(text.label1, color.primary)}>\n            View transaction\n          </span>\n        </a>\n      );\n    }\n\n    // SW will have txn id\n    if (transactionId) {\n      actionElement = (\n        <button\n          onClick={() => showCallsStatus({ id: transactionId })}\n          type=\"button\"\n        >\n          <span className={cn(text.label1, color.primary)}>\n            View transaction\n          </span>\n        </button>\n      );\n    }\n\n    if (receipt) {\n      actionElement = null;\n    }\n\n    return { actionElement };\n  }, [\n    accountChainId,\n    receipt,\n    showCallsStatus,\n    transactionHash,\n    transactionId,\n  ]);\n}\n"],"names":[],"mappings":";;;;;;;AAQO,SAAS,gCAAgC;AAC9C,QAAM,EAAE,SAAS,SAAS,iBAAiB,cAAA,IACzC,sBAAsB;AAElB,QAAA,iBAAiB,WAAW,WAAW;AAEvC,QAAA,EAAE,gBAAgB,IAAI,mBAAmB;AAE/C,SAAO,QAAQ,MAAM;AACb,UAAA,gBAAgB,iBAAiB,cAAc;AAErD,QAAI,gBAA2B;AAG/B,QAAI,iBAAiB;AAEjB,sBAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,MAAM,GAAG,aAAa,OAAO,eAAe;AAAA,UAC5C,QAAO;AAAA,UACP,KAAI;AAAA,UAEJ,UAAA,oBAAC,UAAK,WAAW,GAAG,KAAK,QAAQ,MAAM,OAAO,GAAG,UAEjD,mBAAA,CAAA;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAKJ,QAAI,eAAe;AAEf,sBAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,SAAS,MAAM,gBAAgB,EAAE,IAAI,eAAe;AAAA,UACpD,MAAK;AAAA,UAEL,UAAA,oBAAC,UAAK,WAAW,GAAG,KAAK,QAAQ,MAAM,OAAO,GAAG,UAEjD,mBAAA,CAAA;AAAA,QAAA;AAAA,MACF;AAAA,IAAA;AAIJ,QAAI,SAAS;AACK,sBAAA;AAAA,IAAA;AAGlB,WAAO,EAAE,cAAc;AAAA,EAAA,GACtB;AAAA,IACD;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EAAA,CACD;AACH;"}