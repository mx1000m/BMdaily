{"version":3,"file":"useSendWalletTransactions.js","sources":["../../../src/transaction/hooks/useSendWalletTransactions.tsx"],"sourcesContent":["import { useCallback } from 'react';\nimport type { ContractFunctionParameters } from 'viem';\nimport { useConfig } from 'wagmi';\nimport { Capabilities } from '../../core/constants';\nimport type { Call, UseSendWalletTransactionsParams } from '../types';\nimport { sendBatchedTransactions } from '../utils/sendBatchedTransactions';\nimport { sendSingleTransactions } from '../utils/sendSingleTransactions';\n\n/**\n * Sends transactions to the wallet using the appropriate hook based on Transaction props and wallet capabilities\n */\nexport const useSendWalletTransactions = ({\n  capabilities,\n  sendCallAsync,\n  sendCallsAsync,\n  walletCapabilities,\n}: UseSendWalletTransactionsParams) => {\n  const config = useConfig();\n  return useCallback(\n    async (\n      transactions?:\n        | Call[]\n        | ContractFunctionParameters[]\n        | Promise<Call[]>\n        | Promise<ContractFunctionParameters[]>\n        | Array<Call | ContractFunctionParameters>,\n    ) => {\n      if (!transactions) {\n        return;\n      }\n\n      const resolvedTransactions = await Promise.resolve(transactions);\n\n      if (walletCapabilities[Capabilities.AtomicBatch]?.supported) {\n        // Batched transactions\n        await sendBatchedTransactions({\n          capabilities,\n          sendCallsAsync,\n          transactions: resolvedTransactions,\n        });\n      } else {\n        // Non-batched transactions\n        await sendSingleTransactions({\n          config,\n          sendCallAsync,\n          transactions: resolvedTransactions,\n        });\n      }\n    },\n    [sendCallsAsync, sendCallAsync, capabilities, walletCapabilities, config],\n  );\n};\n"],"names":[],"mappings":";;;;;AAWO,MAAM,4BAA4B,CAAC;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,MAAuC;AACrC,QAAM,SAAS,UAAU;AAClB,SAAA;AAAA,IACL,OACE,iBAMG;;AACH,UAAI,CAAC,cAAc;AACjB;AAAA,MAAA;AAGF,YAAM,uBAAuB,MAAM,QAAQ,QAAQ,YAAY;AAE/D,WAAI,wBAAmB,aAAa,WAAW,MAA3C,mBAA8C,WAAW;AAE3D,cAAM,wBAAwB;AAAA,UAC5B;AAAA,UACA;AAAA,UACA,cAAc;AAAA,QAAA,CACf;AAAA,MAAA,OACI;AAEL,cAAM,uBAAuB;AAAA,UAC3B;AAAA,UACA;AAAA,UACA,cAAc;AAAA,QAAA,CACf;AAAA,MAAA;AAAA,IAEL;AAAA,IACA,CAAC,gBAAgB,eAAe,cAAc,oBAAoB,MAAM;AAAA,EAC1E;AACF;"}