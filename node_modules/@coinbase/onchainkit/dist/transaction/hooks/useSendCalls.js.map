{"version":3,"file":"useSendCalls.js","sources":["../../../src/transaction/hooks/useSendCalls.ts"],"sourcesContent":["import { useSendCalls as useSendCallsWagmi } from 'wagmi/experimental';\nimport { GENERIC_ERROR_MESSAGE } from '../constants';\nimport type { UseSendCallsParams } from '../types';\nimport { isUserRejectedRequestError } from '../utils/isUserRejectedRequestError';\nimport { normalizeTransactionId } from '@/internal/utils/normalizeWagmi';\n\n/**\n * useSendCalls: Experimental Wagmi hook for batching transactions with calldata.\n * Supports Smart Wallets.\n * Supports batch operations and capabilities such as paymasters.\n * Does not support EOAs.\n */\nexport function useSendCalls({\n  setLifecycleStatus,\n  setTransactionId,\n}: UseSendCallsParams) {\n  const { status, sendCallsAsync, data, reset } = useSendCallsWagmi({\n    mutation: {\n      onError: (e) => {\n        const errorMessage = isUserRejectedRequestError(e)\n          ? 'Request denied.'\n          : GENERIC_ERROR_MESSAGE;\n        setLifecycleStatus({\n          statusName: 'error',\n          statusData: {\n            code: 'TmUSCSh01', // Transaction module UseSendCalls hook 01 error\n            error: e.message,\n            message: errorMessage,\n          },\n        });\n      },\n      onSuccess: (data) => {\n        setTransactionId(normalizeTransactionId(data));\n      },\n    },\n  });\n  return { status, sendCallsAsync, data, reset };\n}\n"],"names":["useSendCallsWagmi","data"],"mappings":";;;;AAYO,SAAS,aAAa;AAAA,EAC3B;AAAA,EACA;AACF,GAAuB;AACrB,QAAM,EAAE,QAAQ,gBAAgB,MAAM,MAAA,IAAUA,eAAkB;AAAA,IAChE,UAAU;AAAA,MACR,SAAS,CAAC,MAAM;AACd,cAAM,eAAe,2BAA2B,CAAC,IAC7C,oBACA;AACe,2BAAA;AAAA,UACjB,YAAY;AAAA,UACZ,YAAY;AAAA,YACV,MAAM;AAAA;AAAA,YACN,OAAO,EAAE;AAAA,YACT,SAAS;AAAA,UAAA;AAAA,QACX,CACD;AAAA,MACH;AAAA,MACA,WAAW,CAACC,UAAS;AACF,yBAAA,uBAAuBA,KAAI,CAAC;AAAA,MAAA;AAAA,IAC/C;AAAA,EACF,CACD;AACD,SAAO,EAAE,QAAQ,gBAAgB,MAAM,MAAM;AAC/C;"}