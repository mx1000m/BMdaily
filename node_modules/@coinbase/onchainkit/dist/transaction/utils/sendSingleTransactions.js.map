{"version":3,"file":"sendSingleTransactions.js","sources":["../../../src/transaction/utils/sendSingleTransactions.ts"],"sourcesContent":["import { encodeFunctionData } from 'viem';\nimport { waitForTransactionReceipt } from 'wagmi/actions';\nimport type { SendSingleTransactionParams } from '../types';\nimport { isContract } from './isContract';\n\nexport const sendSingleTransactions = async ({\n  config,\n  sendCallAsync,\n  transactions,\n}: SendSingleTransactionParams) => {\n  const calls = transactions?.map((transaction) => {\n    if (isContract(transaction)) {\n      return {\n        data: encodeFunctionData({\n          abi: transaction?.abi,\n          functionName: transaction?.functionName,\n          args: transaction?.args,\n        }),\n        to: transaction?.address,\n      };\n    }\n    return transaction;\n  });\n\n  for (const call of calls) {\n    const txHash = await sendCallAsync(call);\n    if (txHash) {\n      await waitForTransactionReceipt(config, {\n        hash: txHash,\n        confirmations: 1,\n      });\n    }\n  }\n};\n"],"names":[],"mappings":";;;AAKO,MAAM,yBAAyB,OAAO;AAAA,EAC3C;AAAA,EACA;AAAA,EACA;AACF,MAAmC;AACjC,QAAM,QAAQ,6CAAc,IAAI,CAAC,gBAAgB;AAC3C,QAAA,WAAW,WAAW,GAAG;AACpB,aAAA;AAAA,QACL,MAAM,mBAAmB;AAAA,UACvB,KAAK,2CAAa;AAAA,UAClB,cAAc,2CAAa;AAAA,UAC3B,MAAM,2CAAa;AAAA,QAAA,CACpB;AAAA,QACD,IAAI,2CAAa;AAAA,MACnB;AAAA,IAAA;AAEK,WAAA;AAAA,EAAA;AAGT,aAAW,QAAQ,OAAO;AAClB,UAAA,SAAS,MAAM,cAAc,IAAI;AACvC,QAAI,QAAQ;AACV,YAAM,0BAA0B,QAAQ;AAAA,QACtC,MAAM;AAAA,QACN,eAAe;AAAA,MAAA,CAChB;AAAA,IAAA;AAAA,EACH;AAEJ;"}