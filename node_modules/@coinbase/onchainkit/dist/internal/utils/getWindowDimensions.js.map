{"version":3,"file":"getWindowDimensions.js","sources":["../../../src/internal/utils/getWindowDimensions.ts"],"sourcesContent":["export type WindowSizes = Record<\n  'sm' | 'md' | 'lg',\n  {\n    width: string;\n    height: string;\n  }\n>;\n\nexport const popupSizes: WindowSizes = {\n  sm: { width: '24.67vw', height: '30.83vw' },\n  md: { width: '29vw', height: '36.25vw' },\n  lg: { width: '35vw', height: '43.75vw' },\n};\n\nexport const getWindowDimensions = (size: keyof typeof popupSizes) => {\n  const { width, height } = popupSizes[size];\n\n  // Define minimum sizes (in pixels)\n  const minWidth = 280;\n  const minHeight = 350;\n\n  // Convert viewport units to pixels\n  const vwToPx = (vw: number) => (vw / 100) * window.innerWidth;\n\n  const widthPx = Math.max(\n    minWidth,\n    Math.round(vwToPx(Number.parseFloat(width))),\n  );\n  const heightPx = Math.max(\n    minHeight,\n    Math.round(vwToPx(Number.parseFloat(height))),\n  );\n\n  // Ensure the width and height don't exceed 90% of the viewport dimensions\n  const maxWidth = Math.round(window.innerWidth * 0.9);\n  const maxHeight = Math.round(window.innerHeight * 0.9);\n  const adjustedWidthPx = Math.min(widthPx, maxWidth);\n  const adjustedHeightPx = Math.min(heightPx, maxHeight);\n\n  return { width: adjustedWidthPx, height: adjustedHeightPx };\n};\n"],"names":[],"mappings":"AAQO,MAAM,aAA0B;AAAA,EACrC,IAAI,EAAE,OAAO,WAAW,QAAQ,UAAU;AAAA,EAC1C,IAAI,EAAE,OAAO,QAAQ,QAAQ,UAAU;AAAA,EACvC,IAAI,EAAE,OAAO,QAAQ,QAAQ,UAAU;AACzC;AAEa,MAAA,sBAAsB,CAAC,SAAkC;AACpE,QAAM,EAAE,OAAO,WAAW,WAAW,IAAI;AAGzC,QAAM,WAAW;AACjB,QAAM,YAAY;AAGlB,QAAM,SAAS,CAAC,OAAgB,KAAK,MAAO,OAAO;AAEnD,QAAM,UAAU,KAAK;AAAA,IACnB;AAAA,IACA,KAAK,MAAM,OAAO,OAAO,WAAW,KAAK,CAAC,CAAC;AAAA,EAC7C;AACA,QAAM,WAAW,KAAK;AAAA,IACpB;AAAA,IACA,KAAK,MAAM,OAAO,OAAO,WAAW,MAAM,CAAC,CAAC;AAAA,EAC9C;AAGA,QAAM,WAAW,KAAK,MAAM,OAAO,aAAa,GAAG;AACnD,QAAM,YAAY,KAAK,MAAM,OAAO,cAAc,GAAG;AACrD,QAAM,kBAAkB,KAAK,IAAI,SAAS,QAAQ;AAClD,QAAM,mBAAmB,KAAK,IAAI,UAAU,SAAS;AAErD,SAAO,EAAE,OAAO,iBAAiB,QAAQ,iBAAiB;AAC5D;"}