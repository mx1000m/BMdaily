{"version":3,"file":"convertSnakeToCamelCase.js","sources":["../../../src/internal/utils/convertSnakeToCamelCase.ts"],"sourcesContent":["/**\n * Converts snake_case keys to camelCase in an object or array of objects.\n * @param {T} obj - The object, array, or string to convert. (required)\n * @returns {T} The converted object, array, or string.\n */\nexport function convertSnakeToCamelCase<T>(obj: T): T {\n  if (typeof obj === 'string') {\n    return obj as T;\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map((item) => convertSnakeToCamelCase(item)) as T;\n  }\n\n  if (obj && obj.constructor === Object) {\n    return Object.keys(obj).reduce((acc: T, key: string) => {\n      const camelCaseKey = toCamelCase<T>(key);\n      acc[camelCaseKey] = convertSnakeToCamelCase(obj[key as keyof T]);\n      return acc;\n    }, {} as T);\n  }\n  return obj;\n}\n\nfunction toCamelCase<T>(str: string): keyof T {\n  return str.replace(/_([a-z])/g, (_, letter) =>\n    letter.toUpperCase(),\n  ) as keyof T;\n}\n"],"names":[],"mappings":"AAKO,SAAS,wBAA2B,KAAW;AAChD,MAAA,OAAO,QAAQ,UAAU;AACpB,WAAA;AAAA,EAAA;AAGL,MAAA,MAAM,QAAQ,GAAG,GAAG;AACtB,WAAO,IAAI,IAAI,CAAC,SAAS,wBAAwB,IAAI,CAAC;AAAA,EAAA;AAGpD,MAAA,OAAO,IAAI,gBAAgB,QAAQ;AACrC,WAAO,OAAO,KAAK,GAAG,EAAE,OAAO,CAAC,KAAQ,QAAgB;AAChD,YAAA,eAAe,YAAe,GAAG;AACvC,UAAI,YAAY,IAAI,wBAAwB,IAAI,GAAc,CAAC;AACxD,aAAA;AAAA,IACT,GAAG,EAAO;AAAA,EAAA;AAEL,SAAA;AACT;AAEA,SAAS,YAAe,KAAsB;AAC5C,SAAO,IAAI;AAAA,IAAQ;AAAA,IAAa,CAAC,GAAG,WAClC,OAAO,YAAY;AAAA,EACrB;AACF;"}