{"version":3,"file":"useTheme.js","sources":["../../../src/internal/hooks/useTheme.ts"],"sourcesContent":["import type { UseThemeReact } from '../../core/types';\nimport { useOnchainKit } from '../../useOnchainKit';\nimport { usePreferredColorScheme } from './usePreferredColorScheme';\n\nexport function useTheme(): UseThemeReact {\n  const preferredMode = usePreferredColorScheme();\n  const { config: { appearance } = {} } = useOnchainKit();\n  const { theme = 'default', mode = 'auto' } = appearance || {};\n\n  if (theme === 'cyberpunk' || theme === 'hacker') {\n    return theme;\n  }\n\n  switch (mode) {\n    case 'auto':\n      return `${theme}-${preferredMode}` as UseThemeReact;\n    case 'dark':\n      return `${theme}-dark` as UseThemeReact;\n    case 'light':\n      return `${theme}-light` as UseThemeReact;\n    default:\n      // If mode is not set or is an invalid value, fall back to preferredMode\n      return `${theme}-${preferredMode}` as UseThemeReact;\n  }\n}\n"],"names":[],"mappings":";;AAIO,SAAS,WAA0B;AACxC,QAAM,gBAAgB,wBAAwB;AACxC,QAAA,EAAE,QAAQ,EAAE,eAAe,CAAC,EAAA,IAAM,cAAc;AACtD,QAAM,EAAE,QAAQ,WAAW,OAAO,OAAO,IAAI,cAAc,CAAC;AAExD,MAAA,UAAU,eAAe,UAAU,UAAU;AACxC,WAAA;AAAA,EAAA;AAGT,UAAQ,MAAM;AAAA,IACZ,KAAK;AACI,aAAA,GAAG,KAAK,IAAI,aAAa;AAAA,IAClC,KAAK;AACH,aAAO,GAAG,KAAK;AAAA,IACjB,KAAK;AACH,aAAO,GAAG,KAAK;AAAA,IACjB;AAES,aAAA,GAAG,KAAK,IAAI,aAAa;AAAA,EAAA;AAEtC;"}