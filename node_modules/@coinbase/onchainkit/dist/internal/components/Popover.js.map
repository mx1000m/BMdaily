{"version":3,"file":"Popover.js","sources":["../../../src/internal/components/Popover.tsx"],"sourcesContent":["import { useTheme } from '@/internal/hooks/useTheme';\nimport { zIndex } from '@/styles/constants';\nimport { cn } from '@/styles/theme';\nimport type React from 'react';\nimport { useCallback, useEffect, useRef } from 'react';\nimport { createPortal } from 'react-dom';\nimport { DismissableLayer } from './DismissableLayer';\nimport { FocusTrap } from './FocusTrap';\n\ntype Position = 'top' | 'right' | 'bottom' | 'left';\ntype Alignment = 'start' | 'center' | 'end';\n\ntype PopoverProps = {\n  /** Determines how the popover aligns with the anchor */\n  align?: Alignment;\n  /** The element that the popover will be positioned relative to. */\n  anchor: HTMLElement | null;\n  children?: React.ReactNode;\n  onClose?: () => void;\n  /** Spacing (in pixels) between the anchor element and the popover content. */\n  offset?: number;\n  /** Determines which side of the anchor element the popover will appear. */\n  position?: Position;\n  isOpen?: boolean;\n  /** Reference to the element that triggered the popover (e.g., a button that opened it). */\n  trigger?: React.RefObject<HTMLElement>;\n  'aria-label'?: string;\n  'aria-labelledby'?: string;\n  'aria-describedby'?: string;\n};\n\n/** Calculates the initial position of the popover based on the position prop. */\nfunction getInitialPosition(\n  triggerRect: DOMRect,\n  contentRect: DOMRect,\n  position: Position,\n  offset: number,\n): { top: number; left: number } {\n  let top = 0;\n  let left = 0;\n\n  switch (position) {\n    case 'top':\n      top = triggerRect.top - contentRect.height - offset;\n      break;\n    case 'bottom':\n      top = triggerRect.bottom + offset;\n      break;\n    case 'left':\n      left = triggerRect.left - contentRect.width - offset;\n      break;\n    case 'right':\n      left = triggerRect.right + offset;\n      break;\n  }\n\n  return { top, left };\n}\n\n/** Adjusts the initial position based on the alignment prop. */\nfunction adjustAlignment(\n  triggerRect: DOMRect,\n  contentRect: DOMRect,\n  initialPosition: { top: number; left: number },\n  align: Alignment,\n  position: Position,\n): { top: number; left: number } {\n  const { top: initialTop, left: initialLeft } = initialPosition;\n  let top = initialTop;\n  let left = initialLeft;\n\n  const isVerticalPosition = position === 'top' || position === 'bottom';\n\n  switch (align) {\n    case 'start':\n      if (isVerticalPosition) {\n        left = triggerRect.left;\n      } else {\n        top = triggerRect.top;\n      }\n      break;\n    case 'center':\n      if (isVerticalPosition) {\n        left = triggerRect.left + (triggerRect.width - contentRect.width) / 2;\n      } else {\n        top = triggerRect.top + (triggerRect.height - contentRect.height) / 2;\n      }\n      break;\n    case 'end':\n      if (isVerticalPosition) {\n        left = triggerRect.right - contentRect.width;\n      } else {\n        top = triggerRect.bottom - contentRect.height;\n      }\n      break;\n  }\n\n  return { top, left };\n}\n\n/** Popover primitive that handles:\n * - Positioning relative to anchor element\n * - Focus management\n * - Click outside and escape key dismissal\n * - Portal rendering\n * - Proper ARIA attributes */\nexport function Popover({\n  children,\n  anchor,\n  isOpen,\n  onClose,\n  position = 'bottom',\n  align = 'center',\n  offset = 8,\n  trigger,\n  'aria-label': ariaLabel,\n  'aria-labelledby': ariaLabelledby,\n  'aria-describedby': ariaDescribedby,\n}: PopoverProps) {\n  const contentRef = useRef<HTMLDivElement>(null);\n  const componentTheme = useTheme();\n\n  const updatePosition = useCallback(() => {\n    if (!anchor || !contentRef.current) {\n      return;\n    }\n\n    const triggerRect = anchor.getBoundingClientRect();\n    const contentRect = contentRef.current?.getBoundingClientRect();\n\n    if (!triggerRect || !contentRect) {\n      return;\n    }\n\n    const initialPosition = getInitialPosition(\n      triggerRect,\n      contentRect,\n      position,\n      offset,\n    );\n    const finalPosition = adjustAlignment(\n      triggerRect,\n      contentRect,\n      initialPosition,\n      align,\n      position,\n    );\n\n    contentRef.current.style.top = `${finalPosition.top}px`;\n    contentRef.current.style.left = `${finalPosition.left}px`;\n  }, [anchor, position, offset, align]);\n\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n\n    updatePosition();\n    window.addEventListener('resize', updatePosition);\n    window.addEventListener('scroll', updatePosition);\n\n    return () => {\n      window.removeEventListener('resize', updatePosition);\n      window.removeEventListener('scroll', updatePosition);\n    };\n  }, [isOpen, updatePosition]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  const popover = (\n    <div\n      className={cn(\n        componentTheme,\n        zIndex.dropdown,\n        'pointer-events-none fixed',\n      )}\n      data-portal-origin=\"true\"\n    >\n      <FocusTrap active={isOpen}>\n        <DismissableLayer onDismiss={onClose} triggerRef={trigger}>\n          <div\n            aria-label={ariaLabel}\n            aria-labelledby={ariaLabelledby}\n            aria-describedby={ariaDescribedby}\n            className={cn('pointer-events-auto fixed')}\n            data-testid=\"ockPopover\"\n            ref={contentRef}\n            role=\"dialog\"\n          >\n            {children}\n          </div>\n        </DismissableLayer>\n      </FocusTrap>\n    </div>\n  );\n\n  return createPortal(popover, document.body);\n}\n"],"names":[],"mappings":"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"}