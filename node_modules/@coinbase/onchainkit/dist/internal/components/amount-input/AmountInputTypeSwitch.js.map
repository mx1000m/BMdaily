{"version":3,"file":"AmountInputTypeSwitch.js","sources":["../../../../src/internal/components/amount-input/AmountInputTypeSwitch.tsx"],"sourcesContent":["import { cn, pressable, text } from '@/styles/theme';\nimport { useCallback, useMemo } from 'react';\nimport { useIcon } from '../../hooks/useIcon';\nimport { formatFiatAmount } from '../../utils/formatFiatAmount';\nimport { truncateDecimalPlaces } from '../../utils/truncateDecimalPlaces';\nimport { Skeleton } from '../Skeleton';\n\ntype AmountInputTypeSwitchPropsReact = {\n  selectedInputType: 'fiat' | 'crypto';\n  setSelectedInputType: (type: 'fiat' | 'crypto') => void;\n  asset: string;\n  fiatAmount: string;\n  cryptoAmount: string;\n  exchangeRate: number;\n  exchangeRateLoading: boolean;\n  loadingDisplay?: React.ReactNode;\n  currency: string;\n  className?: string;\n};\n\nexport function AmountInputTypeSwitch({\n  selectedInputType,\n  setSelectedInputType,\n  asset,\n  fiatAmount,\n  cryptoAmount,\n  exchangeRate,\n  exchangeRateLoading,\n  currency,\n  loadingDisplay = <Skeleton className=\"h-[1.625rem]\" />,\n  className,\n}: AmountInputTypeSwitchPropsReact) {\n  const iconSvg = useIcon({ icon: 'toggle' });\n\n  const handleToggle = useCallback(() => {\n    setSelectedInputType(selectedInputType === 'fiat' ? 'crypto' : 'fiat');\n  }, [selectedInputType, setSelectedInputType]);\n\n  const formatCrypto = useCallback(\n    (amount: string) => {\n      return `${truncateDecimalPlaces(amount || '0', 8)} ${asset}`;\n    },\n    [asset],\n  );\n\n  const amountLine = useMemo(() => {\n    return (\n      <span data-testid=\"ockAmountLine\" className={cn(text.label1)}>\n        {selectedInputType === 'fiat'\n          ? formatCrypto(cryptoAmount)\n          : formatFiatAmount({\n              amount: fiatAmount,\n              currency: currency,\n              minimumFractionDigits: 0,\n            })}\n      </span>\n    );\n  }, [cryptoAmount, fiatAmount, selectedInputType, formatCrypto, currency]);\n\n  if (exchangeRateLoading || !exchangeRate) {\n    return loadingDisplay;\n  }\n\n  return (\n    <div className={cn('flex items-center', className)}>\n      <button\n        type=\"button\"\n        aria-label=\"amount type switch\"\n        className={cn(\n          pressable.default,\n          'mr-1 rounded-full p-1 opacity-50 transition-opacity hover:opacity-100',\n        )}\n        data-testid=\"ockAmountTypeSwitch\"\n        onClick={handleToggle}\n      >\n        <div className=\"h-[1.125rem] w-[1.125rem]\">{iconSvg}</div>\n      </button>\n      <div className=\"w-full truncate\">{amountLine}</div>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;AAoBO,SAAS,sBAAsB;AAAA,EACpC;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,iBAAiB,oBAAC,UAAS,EAAA,WAAU,eAAe,CAAA;AAAA,EACpD;AACF,GAAoC;AAClC,QAAM,UAAU,QAAQ,EAAE,MAAM,UAAU;AAEpC,QAAA,eAAe,YAAY,MAAM;AAChB,yBAAA,sBAAsB,SAAS,WAAW,MAAM;AAAA,EAAA,GACpE,CAAC,mBAAmB,oBAAoB,CAAC;AAE5C,QAAM,eAAe;AAAA,IACnB,CAAC,WAAmB;AAClB,aAAO,GAAG,sBAAsB,UAAU,KAAK,CAAC,CAAC,IAAI,KAAK;AAAA,IAC5D;AAAA,IACA,CAAC,KAAK;AAAA,EACR;AAEM,QAAA,aAAa,QAAQ,MAAM;AAC/B,WACG,oBAAA,QAAA,EAAK,eAAY,iBAAgB,WAAW,GAAG,KAAK,MAAM,GACxD,UAAsB,sBAAA,SACnB,aAAa,YAAY,IACzB,iBAAiB;AAAA,MACf,QAAQ;AAAA,MACR;AAAA,MACA,uBAAuB;AAAA,IACxB,CAAA,GACP;AAAA,EAAA,GAED,CAAC,cAAc,YAAY,mBAAmB,cAAc,QAAQ,CAAC;AAEpE,MAAA,uBAAuB,CAAC,cAAc;AACjC,WAAA;AAAA,EAAA;AAGT,8BACG,OAAI,EAAA,WAAW,GAAG,qBAAqB,SAAS,GAC/C,UAAA;AAAA,IAAA;AAAA,MAAC;AAAA,MAAA;AAAA,QACC,MAAK;AAAA,QACL,cAAW;AAAA,QACX,WAAW;AAAA,UACT,UAAU;AAAA,UACV;AAAA,QACF;AAAA,QACA,eAAY;AAAA,QACZ,SAAS;AAAA,QAET,UAAC,oBAAA,OAAA,EAAI,WAAU,6BAA6B,UAAQ,QAAA,CAAA;AAAA,MAAA;AAAA,IACtD;AAAA,IACC,oBAAA,OAAA,EAAI,WAAU,mBAAmB,UAAW,WAAA,CAAA;AAAA,EAAA,GAC/C;AAEJ;"}