import { jsx } from "react/jsx-runtime";
import { useRef, useEffect } from "react";
function DismissableLayer({
  children,
  disableEscapeKey = false,
  disableOutsideClick = false,
  onDismiss,
  triggerRef,
  preventTriggerEvents = false
}) {
  const layerRef = useRef(null);
  useEffect(() => {
    if (disableOutsideClick && disableEscapeKey) {
      return;
    }
    const handleTriggerClick = (event) => {
      if (preventTriggerEvents) {
        event.preventDefault();
        event.stopPropagation();
      }
    };
    const isClickInsideLayer = (target) => {
      var _a;
      return (_a = layerRef.current) == null ? void 0 : _a.contains(target);
    };
    const handlePointerDownCapture = (event) => {
      var _a;
      if (disableOutsideClick) {
        return;
      }
      if (!(event.target instanceof Node)) {
        return;
      }
      const target = event.target;
      if ((_a = triggerRef == null ? void 0 : triggerRef.current) == null ? void 0 : _a.contains(target)) {
        handleTriggerClick(event);
        return;
      }
      if (!isClickInsideLayer(target)) {
        onDismiss == null ? void 0 : onDismiss();
      }
    };
    const handleKeyDown = (event) => {
      if (!disableEscapeKey && event.key === "Escape") {
        onDismiss == null ? void 0 : onDismiss();
      }
    };
    document.addEventListener("pointerdown", handlePointerDownCapture, true);
    document.addEventListener("keydown", handleKeyDown);
    return () => {
      document.removeEventListener(
        "pointerdown",
        handlePointerDownCapture,
        true
      );
      document.removeEventListener("keydown", handleKeyDown);
    };
  }, [
    disableOutsideClick,
    disableEscapeKey,
    onDismiss,
    triggerRef,
    preventTriggerEvents
  ]);
  return /* @__PURE__ */ jsx("div", { "data-testid": "ockDismissableLayer", ref: layerRef, children });
}
export {
  DismissableLayer
};
//# sourceMappingURL=DismissableLayer.js.map
