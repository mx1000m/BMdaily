import { jsx } from "react/jsx-runtime";
import { cn } from "../../../styles/theme.js";
import { useCallback } from "react";
import { useTabsContext } from "./Tabs.js";
function TabsList({ className, children }) {
  const { setSelectedTab } = useTabsContext();
  const handleKeyDown = useCallback(
    (event) => {
      var _a, _b;
      const target = event.target;
      const tabs = Array.from(
        ((_a = target.parentElement) == null ? void 0 : _a.querySelectorAll('[role="tab"]')) || []
      );
      const currentIndex = tabs.indexOf(target);
      if (currentIndex === -1) {
        return;
      }
      let nextIndex;
      switch (event.key) {
        case "ArrowRight":
          nextIndex = (currentIndex + 1) % tabs.length;
          break;
        case "ArrowLeft":
          nextIndex = (currentIndex - 1 + tabs.length) % tabs.length;
          break;
        default:
          return;
      }
      const nextTab = tabs[nextIndex];
      nextTab.focus();
      const tabValue = (_b = nextTab.getAttribute("aria-controls")) == null ? void 0 : _b.replace("-panel", "");
      if (tabValue) {
        setSelectedTab(tabValue);
      }
      event.preventDefault();
    },
    [setSelectedTab]
  );
  return /* @__PURE__ */ jsx(
    "div",
    {
      className: cn("flex overflow-hidden", className),
      role: "tablist",
      "aria-orientation": "horizontal",
      onKeyDown: handleKeyDown,
      children
    }
  );
}
export {
  TabsList
};
//# sourceMappingURL=TabsList.js.map
