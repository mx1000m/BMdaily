import { jsx } from "react/jsx-runtime";
import { useRef, useEffect } from "react";
const FOCUSABLE_ELEMENTS_SELECTOR = 'button:not([disabled]), [href], input:not([disabled]), select:not([disabled]), textarea:not([disabled]), [tabindex]:not([tabindex="-1"])';
function FocusTrap({ active = true, children }) {
  const containerRef = useRef(null);
  const previousFocusRef = useRef(null);
  useEffect(() => {
    if (!active) {
      return;
    }
    previousFocusRef.current = document.activeElement;
    if (containerRef.current) {
      const firstFocusable = containerRef.current.querySelector(
        FOCUSABLE_ELEMENTS_SELECTOR
      );
      firstFocusable == null ? void 0 : firstFocusable.focus();
    }
    return () => {
      var _a;
      (_a = previousFocusRef.current) == null ? void 0 : _a.focus();
    };
  }, [active]);
  const getFocusableElements = () => {
    var _a;
    return (_a = containerRef.current) == null ? void 0 : _a.querySelectorAll(
      FOCUSABLE_ELEMENTS_SELECTOR
    );
  };
  const handleTabNavigation = (event, elements) => {
    const firstElement = elements[0];
    const lastElement = elements[elements.length - 1];
    const isFirstElement = document.activeElement === firstElement;
    const isLastElement = document.activeElement === lastElement;
    if (event.shiftKey && isFirstElement) {
      event.preventDefault();
      lastElement.focus();
    } else if (!event.shiftKey && isLastElement) {
      event.preventDefault();
      firstElement.focus();
    }
  };
  const handleKeyDown = (event) => {
    if (!active || event.key !== "Tab") {
      return;
    }
    const focusableElements = getFocusableElements();
    if (!(focusableElements == null ? void 0 : focusableElements.length)) {
      return;
    }
    handleTabNavigation(event, focusableElements);
  };
  return /* @__PURE__ */ jsx(
    "div",
    {
      "data-testid": "ockFocusTrap",
      onKeyDown: handleKeyDown,
      ref: containerRef,
      children
    }
  );
}
export {
  FocusTrap
};
//# sourceMappingURL=FocusTrap.js.map
