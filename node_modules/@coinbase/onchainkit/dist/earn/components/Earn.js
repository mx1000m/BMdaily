'use client';
import { jsx, jsxs } from "react/jsx-runtime";
import { Tabs } from "../../internal/components/tabs/Tabs.js";
import { Tab } from "../../internal/components/tabs/Tab.js";
import { TabsList } from "../../internal/components/tabs/TabsList.js";
import { TabContent } from "../../internal/components/tabs/TabContent.js";
import { useTheme } from "../../internal/hooks/useTheme.js";
import { cn, border } from "../../styles/theme.js";
import { EarnDeposit } from "./EarnDeposit.js";
import { EarnProvider, useEarnContext } from "./EarnProvider.js";
import { EarnWithdraw } from "./EarnWithdraw.js";
function EarnDefaultContent() {
  const { refetchWalletBalance, refetchDepositedBalance } = useEarnContext();
  return /* @__PURE__ */ jsxs(Tabs, { defaultValue: "deposit", children: [
    /* @__PURE__ */ jsxs(TabsList, { children: [
      /* @__PURE__ */ jsx(
        Tab,
        {
          value: "deposit",
          onClick: refetchWalletBalance,
          className: "rounded-tl-[calc(var(--ock-border-radius)_-_1px)]",
          children: "Deposit"
        }
      ),
      /* @__PURE__ */ jsx(
        Tab,
        {
          value: "withdraw",
          onClick: refetchDepositedBalance,
          className: "rounded-tr-[calc(var(--ock-border-radius)_-_1px)]",
          children: "Withdraw"
        }
      )
    ] }),
    /* @__PURE__ */ jsx(
      TabContent,
      {
        value: "deposit",
        className: cn(
          border.lineDefault,
          "!border-l-0 !border-b-0 !border-r-0"
        ),
        children: /* @__PURE__ */ jsx(EarnDeposit, {})
      }
    ),
    /* @__PURE__ */ jsx(
      TabContent,
      {
        value: "withdraw",
        className: cn(
          border.lineDefault,
          "!border-l-0 !border-b-0 !border-r-0"
        ),
        children: /* @__PURE__ */ jsx(EarnWithdraw, {})
      }
    )
  ] });
}
function Earn({
  children = /* @__PURE__ */ jsx(EarnDefaultContent, {}),
  className,
  vaultAddress,
  isSponsored,
  onError,
  onStatus,
  onSuccess
}) {
  const componentTheme = useTheme();
  return /* @__PURE__ */ jsx(
    EarnProvider,
    {
      vaultAddress,
      isSponsored,
      onError,
      onStatus,
      onSuccess,
      children: /* @__PURE__ */ jsx(
        "div",
        {
          className: cn(
            componentTheme,
            "flex w-[375px] flex-col overflow-hidden",
            border.radius,
            border.lineDefault,
            className
          ),
          children
        }
      )
    }
  );
}
export {
  Earn
};
//# sourceMappingURL=Earn.js.map
