{"version":3,"file":"DepositBalance.js","sources":["../../../src/earn/components/DepositBalance.tsx"],"sourcesContent":["'use client';\nimport { getTruncatedAmount } from '@/earn/utils/getTruncatedAmount';\nimport { Skeleton } from '@/internal/components/Skeleton';\nimport { cn } from '@/styles/theme';\nimport { useCallback, useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport type { DepositBalanceReact } from '../types';\nimport { EarnBalance } from './EarnBalance';\nimport { useEarnContext } from './EarnProvider';\n\nexport function DepositBalance({ className }: DepositBalanceReact) {\n  const { address } = useAccount();\n  const {\n    setDepositAmount,\n    vaultToken,\n    walletBalance,\n    walletBalanceStatus: status,\n  } = useEarnContext();\n\n  const handleMaxPress = useCallback(() => {\n    if (walletBalance) {\n      setDepositAmount(walletBalance);\n    }\n  }, [walletBalance, setDepositAmount]);\n\n  const balance = useMemo(() => {\n    if (!walletBalance) {\n      return '0';\n    }\n    return getTruncatedAmount(walletBalance.toString(), 6);\n  }, [walletBalance]);\n\n  const title = useMemo(() => {\n    if (!address) {\n      return 'Wallet not connected';\n    }\n    // Fetching vault token, but user is connected\n    if (!vaultToken) {\n      return (\n        <Skeleton\n          className={cn('!bg-[var(--ock-bg-alternate-active)] h-6 w-24')}\n        />\n      );\n    }\n    if (status === 'pending') {\n      return (\n        <div className=\"flex gap-1\">\n          <Skeleton className=\"!bg-[var(--ock-bg-alternate-active)] h-6 w-12\" />\n          <span>{vaultToken?.symbol}</span>\n        </div>\n      );\n    }\n    return `${balance} ${vaultToken?.symbol}`;\n  }, [balance, vaultToken, address, status]);\n\n  const subtitle = useMemo(() => {\n    if (!address) {\n      return 'Connect wallet to deposit';\n    }\n    return 'Available to deposit';\n  }, [address]);\n\n  return (\n    <EarnBalance\n      className={className}\n      title={title}\n      subtitle={subtitle}\n      onActionPress={handleMaxPress}\n      showAction={!!walletBalance}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAUgB,SAAA,eAAe,EAAE,aAAkC;AAC3D,QAAA,EAAE,QAAQ,IAAI,WAAW;AACzB,QAAA;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA,qBAAqB;AAAA,MACnB,eAAe;AAEb,QAAA,iBAAiB,YAAY,MAAM;AACvC,QAAI,eAAe;AACjB,uBAAiB,aAAa;AAAA,IAAA;AAAA,EAChC,GACC,CAAC,eAAe,gBAAgB,CAAC;AAE9B,QAAA,UAAU,QAAQ,MAAM;AAC5B,QAAI,CAAC,eAAe;AACX,aAAA;AAAA,IAAA;AAET,WAAO,mBAAmB,cAAc,SAAS,GAAG,CAAC;AAAA,EAAA,GACpD,CAAC,aAAa,CAAC;AAEZ,QAAA,QAAQ,QAAQ,MAAM;AAC1B,QAAI,CAAC,SAAS;AACL,aAAA;AAAA,IAAA;AAGT,QAAI,CAAC,YAAY;AAEb,aAAA;AAAA,QAAC;AAAA,QAAA;AAAA,UACC,WAAW,GAAG,+CAA+C;AAAA,QAAA;AAAA,MAC/D;AAAA,IAAA;AAGJ,QAAI,WAAW,WAAW;AAEtB,aAAA,qBAAC,OAAI,EAAA,WAAU,cACb,UAAA;AAAA,QAAC,oBAAA,UAAA,EAAS,WAAU,gDAAgD,CAAA;AAAA,QACpE,oBAAC,QAAM,EAAA,UAAA,yCAAY,OAAO,CAAA;AAAA,MAAA,GAC5B;AAAA,IAAA;AAGJ,WAAO,GAAG,OAAO,IAAI,yCAAY,MAAM;AAAA,KACtC,CAAC,SAAS,YAAY,SAAS,MAAM,CAAC;AAEnC,QAAA,WAAW,QAAQ,MAAM;AAC7B,QAAI,CAAC,SAAS;AACL,aAAA;AAAA,IAAA;AAEF,WAAA;AAAA,EAAA,GACN,CAAC,OAAO,CAAC;AAGV,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf,YAAY,CAAC,CAAC;AAAA,IAAA;AAAA,EAChB;AAEJ;"}