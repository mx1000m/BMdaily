'use client';
import { jsx, jsxs } from "react/jsx-runtime";
import { getTruncatedAmount } from "../utils/getTruncatedAmount.js";
import { Skeleton } from "../../internal/components/Skeleton.js";
import { cn } from "../../styles/theme.js";
import { useCallback, useMemo } from "react";
import { useAccount } from "wagmi";
import { EarnBalance } from "./EarnBalance.js";
import { useEarnContext } from "./EarnProvider.js";
function DepositBalance({ className }) {
  const { address } = useAccount();
  const {
    setDepositAmount,
    vaultToken,
    walletBalance,
    walletBalanceStatus: status
  } = useEarnContext();
  const handleMaxPress = useCallback(() => {
    if (walletBalance) {
      setDepositAmount(walletBalance);
    }
  }, [walletBalance, setDepositAmount]);
  const balance = useMemo(() => {
    if (!walletBalance) {
      return "0";
    }
    return getTruncatedAmount(walletBalance.toString(), 6);
  }, [walletBalance]);
  const title = useMemo(() => {
    if (!address) {
      return "Wallet not connected";
    }
    if (!vaultToken) {
      return /* @__PURE__ */ jsx(
        Skeleton,
        {
          className: cn("!bg-[var(--ock-bg-alternate-active)] h-6 w-24")
        }
      );
    }
    if (status === "pending") {
      return /* @__PURE__ */ jsxs("div", { className: "flex gap-1", children: [
        /* @__PURE__ */ jsx(Skeleton, { className: "!bg-[var(--ock-bg-alternate-active)] h-6 w-12" }),
        /* @__PURE__ */ jsx("span", { children: vaultToken == null ? void 0 : vaultToken.symbol })
      ] });
    }
    return `${balance} ${vaultToken == null ? void 0 : vaultToken.symbol}`;
  }, [balance, vaultToken, address, status]);
  const subtitle = useMemo(() => {
    if (!address) {
      return "Connect wallet to deposit";
    }
    return "Available to deposit";
  }, [address]);
  return /* @__PURE__ */ jsx(
    EarnBalance,
    {
      className,
      title,
      subtitle,
      onActionPress: handleMaxPress,
      showAction: !!walletBalance
    }
  );
}
export {
  DepositBalance
};
//# sourceMappingURL=DepositBalance.js.map
