{"version":3,"file":"YieldDetails.js","sources":["../../../src/earn/components/YieldDetails.tsx"],"sourcesContent":["'use client';\nimport { useEarnContext } from '@/earn/components/EarnProvider';\nimport { getTruncatedAmount } from '@/earn/utils/getTruncatedAmount';\nimport { Popover } from '@/internal/components/Popover';\nimport { Skeleton } from '@/internal/components/Skeleton';\nimport { infoSvg } from '@/internal/svg/infoSvg';\nimport { formatPercent } from '@/internal/utils/formatPercent';\nimport { background, border, cn, color, text } from '@/styles/theme';\nimport { useRef, useState } from 'react';\n\nfunction YieldInfo() {\n  const { rewards, nativeApy, vaultToken, vaultFee } = useEarnContext();\n  return (\n    <div\n      className={cn(\n        color.foregroundMuted,\n        border.defaultActive,\n        background.default,\n        'fade-in flex min-w-52 animate-in flex-col gap-2 rounded-lg border p-3 text-sm duration-200',\n      )}\n    >\n      {nativeApy ? (\n        <div\n          className=\"flex items-center justify-between gap-1\"\n          data-testid=\"ock-earnNativeApy\"\n        >\n          <div>{vaultToken?.symbol}</div>\n          <div className=\"font-semibold\">{formatPercent(nativeApy)}</div>\n        </div>\n      ) : null}\n\n      {rewards?.map((reward) => (\n        <div\n          key={reward.asset}\n          className=\"flex items-center justify-between gap-1\"\n          data-testid=\"ock-earnRewards\"\n        >\n          <div>{reward.assetName}</div>\n          <div className=\"font-semibold\">{formatPercent(reward.apy)}</div>\n        </div>\n      ))}\n\n      {vaultFee && nativeApy ? (\n        <div\n          className=\"flex items-center justify-between gap-1\"\n          data-testid=\"ock-earnPerformanceFee\"\n        >\n          <div>\n            Perf. Fee{' '}\n            <span className=\"text-xs\">({formatPercent(vaultFee, 0)})</span>\n          </div>\n          <div className=\"font-semibold\">\n            -{formatPercent(vaultFee * nativeApy)}\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n}\n\nexport function YieldDetails() {\n  const [isOpen, setIsOpen] = useState(false);\n  const triggerRef = useRef<HTMLButtonElement>(null);\n  const anchorRef = useRef<HTMLDivElement>(null);\n\n  const { apy } = useEarnContext();\n\n  if (!apy) {\n    return <Skeleton className=\"!rounded-full h-7 min-w-28\" />;\n  }\n\n  return (\n    <div\n      ref={anchorRef}\n      className={cn(\n        text.label1,\n        color.foregroundMuted,\n        background.alternate,\n        'flex items-center justify-center gap-1 rounded-full p-1 px-3',\n      )}\n      data-testid=\"ock-yieldDetails\"\n    >\n      {`APY ${formatPercent(Number(getTruncatedAmount(apy.toString(), 4)))}`}\n      <button\n        ref={triggerRef}\n        type=\"button\"\n        data-testid=\"ock-apyInfoButton\"\n        className={cn(\n          'size-3 [&_path]:fill-[var(--ock-icon-color-foreground-muted)] [&_path]:transition-colors [&_path]:ease-in-out [&_path]:hover:fill-[var(--ock-icon-color-foreground)]',\n          isOpen && '[&_path]:fill-[var(--ock-icon-color-foreground)]',\n        )}\n        onClick={() => setIsOpen(!isOpen)}\n      >\n        {infoSvg}\n      </button>\n\n      <Popover\n        isOpen={isOpen}\n        onClose={() => setIsOpen(false)}\n        position=\"bottom\"\n        align=\"end\"\n        trigger={triggerRef}\n        anchor={anchorRef.current}\n        offset={4}\n      >\n        <YieldInfo />\n      </Popover>\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;;AAUA,SAAS,YAAY;AACnB,QAAM,EAAE,SAAS,WAAW,YAAY,SAAA,IAAa,eAAe;AAElE,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT,MAAM;AAAA,QACN,OAAO;AAAA,QACP,WAAW;AAAA,QACX;AAAA,MACF;AAAA,MAEC,UAAA;AAAA,QACC,YAAA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAU;AAAA,YACV,eAAY;AAAA,YAEZ,UAAA;AAAA,cAAC,oBAAA,OAAA,EAAK,mDAAY,OAAO,CAAA;AAAA,kCACxB,OAAI,EAAA,WAAU,iBAAiB,UAAA,cAAc,SAAS,EAAE,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA,IAEzD;AAAA,QAEH,mCAAS,IAAI,CAAC,WACb;AAAA,UAAC;AAAA,UAAA;AAAA,YAEC,WAAU;AAAA,YACV,eAAY;AAAA,YAEZ,UAAA;AAAA,cAAC,oBAAA,OAAA,EAAK,iBAAO,UAAU,CAAA;AAAA,kCACtB,OAAI,EAAA,WAAU,iBAAiB,UAAc,cAAA,OAAO,GAAG,EAAE,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,UALrD,OAAO;AAAA,QAAA;AAAA,QASf,YAAY,YACX;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,WAAU;AAAA,YACV,eAAY;AAAA,YAEZ,UAAA;AAAA,cAAA,qBAAC,OAAI,EAAA,UAAA;AAAA,gBAAA;AAAA,gBACO;AAAA,gBACV,qBAAC,QAAK,EAAA,WAAU,WAAU,UAAA;AAAA,kBAAA;AAAA,kBAAE,cAAc,UAAU,CAAC;AAAA,kBAAE;AAAA,gBAAA,EAAC,CAAA;AAAA,cAAA,GAC1D;AAAA,cACA,qBAAC,OAAI,EAAA,WAAU,iBAAgB,UAAA;AAAA,gBAAA;AAAA,gBAC3B,cAAc,WAAW,SAAS;AAAA,cAAA,EACtC,CAAA;AAAA,YAAA;AAAA,UAAA;AAAA,QAAA,IAEA;AAAA,MAAA;AAAA,IAAA;AAAA,EACN;AAEJ;AAEO,SAAS,eAAe;AAC7B,QAAM,CAAC,QAAQ,SAAS,IAAI,SAAS,KAAK;AACpC,QAAA,aAAa,OAA0B,IAAI;AAC3C,QAAA,YAAY,OAAuB,IAAI;AAEvC,QAAA,EAAE,IAAI,IAAI,eAAe;AAE/B,MAAI,CAAC,KAAK;AACD,WAAA,oBAAC,UAAS,EAAA,WAAU,6BAA6B,CAAA;AAAA,EAAA;AAIxD,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,KAAK;AAAA,MACL,WAAW;AAAA,QACT,KAAK;AAAA,QACL,MAAM;AAAA,QACN,WAAW;AAAA,QACX;AAAA,MACF;AAAA,MACA,eAAY;AAAA,MAEX,UAAA;AAAA,QAAO,OAAA,cAAc,OAAO,mBAAmB,IAAI,YAAY,CAAC,CAAC,CAAC,CAAC;AAAA,QACpE;AAAA,UAAC;AAAA,UAAA;AAAA,YACC,KAAK;AAAA,YACL,MAAK;AAAA,YACL,eAAY;AAAA,YACZ,WAAW;AAAA,cACT;AAAA,cACA,UAAU;AAAA,YACZ;AAAA,YACA,SAAS,MAAM,UAAU,CAAC,MAAM;AAAA,YAE/B,UAAA;AAAA,UAAA;AAAA,QACH;AAAA,QAEA;AAAA,UAAC;AAAA,UAAA;AAAA,YACC;AAAA,YACA,SAAS,MAAM,UAAU,KAAK;AAAA,YAC9B,UAAS;AAAA,YACT,OAAM;AAAA,YACN,SAAS;AAAA,YACT,QAAQ,UAAU;AAAA,YAClB,QAAQ;AAAA,YAER,8BAAC,WAAU,CAAA,CAAA;AAAA,UAAA;AAAA,QAAA;AAAA,MACb;AAAA,IAAA;AAAA,EACF;AAEJ;"}