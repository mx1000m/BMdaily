{"version":3,"file":"WithdrawBalance.js","sources":["../../../src/earn/components/WithdrawBalance.tsx"],"sourcesContent":["'use client';\nimport { getTruncatedAmount } from '@/earn/utils/getTruncatedAmount';\nimport { Skeleton } from '@/internal/components/Skeleton';\nimport { useCallback, useMemo } from 'react';\nimport { useAccount } from 'wagmi';\nimport type { WithdrawBalanceReact } from '../types';\nimport { EarnBalance } from './EarnBalance';\nimport { useEarnContext } from './EarnProvider';\n\nexport function WithdrawBalance({ className }: WithdrawBalanceReact) {\n  const {\n    depositedBalance,\n    depositedBalanceStatus: status,\n    setWithdrawAmount,\n    vaultToken,\n  } = useEarnContext();\n  const { address } = useAccount();\n\n  const handleMaxPress = useCallback(() => {\n    if (depositedBalance) {\n      setWithdrawAmount(depositedBalance);\n    }\n  }, [depositedBalance, setWithdrawAmount]);\n\n  const balance = useMemo(() => {\n    if (!depositedBalance) {\n      return '0';\n    }\n    return getTruncatedAmount(depositedBalance.toString(), 4);\n  }, [depositedBalance]);\n\n  const title = useMemo(() => {\n    if (!address) {\n      return 'Wallet not connected';\n    }\n    if (!vaultToken) {\n      return <Skeleton className=\"h-6 w-24\" />;\n    }\n    if (status === 'pending') {\n      return (\n        <div className=\"flex gap-1\">\n          <Skeleton className=\"!bg-[var(--ock-bg-alternate-active)] h-6 w-12\" />\n          <span>{vaultToken?.symbol}</span>\n        </div>\n      );\n    }\n    return `${balance} ${vaultToken?.symbol}`;\n  }, [balance, vaultToken, address, status]);\n\n  const subtitle = useMemo(() => {\n    if (!address) {\n      return 'Connect wallet to withdraw';\n    }\n    return 'Available to withdraw';\n  }, [address]);\n\n  return (\n    <EarnBalance\n      className={className}\n      title={title}\n      subtitle={subtitle}\n      onActionPress={handleMaxPress}\n      showAction={balance !== '0'}\n    />\n  );\n}\n"],"names":[],"mappings":";;;;;;;AASgB,SAAA,gBAAgB,EAAE,aAAmC;AAC7D,QAAA;AAAA,IACJ;AAAA,IACA,wBAAwB;AAAA,IACxB;AAAA,IACA;AAAA,MACE,eAAe;AACb,QAAA,EAAE,QAAQ,IAAI,WAAW;AAEzB,QAAA,iBAAiB,YAAY,MAAM;AACvC,QAAI,kBAAkB;AACpB,wBAAkB,gBAAgB;AAAA,IAAA;AAAA,EACpC,GACC,CAAC,kBAAkB,iBAAiB,CAAC;AAElC,QAAA,UAAU,QAAQ,MAAM;AAC5B,QAAI,CAAC,kBAAkB;AACd,aAAA;AAAA,IAAA;AAET,WAAO,mBAAmB,iBAAiB,SAAS,GAAG,CAAC;AAAA,EAAA,GACvD,CAAC,gBAAgB,CAAC;AAEf,QAAA,QAAQ,QAAQ,MAAM;AAC1B,QAAI,CAAC,SAAS;AACL,aAAA;AAAA,IAAA;AAET,QAAI,CAAC,YAAY;AACR,aAAA,oBAAC,UAAS,EAAA,WAAU,WAAW,CAAA;AAAA,IAAA;AAExC,QAAI,WAAW,WAAW;AAEtB,aAAA,qBAAC,OAAI,EAAA,WAAU,cACb,UAAA;AAAA,QAAC,oBAAA,UAAA,EAAS,WAAU,gDAAgD,CAAA;AAAA,QACpE,oBAAC,QAAM,EAAA,UAAA,yCAAY,OAAO,CAAA;AAAA,MAAA,GAC5B;AAAA,IAAA;AAGJ,WAAO,GAAG,OAAO,IAAI,yCAAY,MAAM;AAAA,KACtC,CAAC,SAAS,YAAY,SAAS,MAAM,CAAC;AAEnC,QAAA,WAAW,QAAQ,MAAM;AAC7B,QAAI,CAAC,SAAS;AACL,aAAA;AAAA,IAAA;AAEF,WAAA;AAAA,EAAA,GACN,CAAC,OAAO,CAAC;AAGV,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC;AAAA,MACA;AAAA,MACA;AAAA,MACA,eAAe;AAAA,MACf,YAAY,YAAY;AAAA,IAAA;AAAA,EAC1B;AAEJ;"}