{"version":3,"file":"useBuildDepositToMorphoTx.js","sources":["../../../src/earn/hooks/useBuildDepositToMorphoTx.ts"],"sourcesContent":["'use client';\nimport { useMorphoVault } from '@/earn/hooks/useMorphoVault';\nimport { buildDepositToMorphoTx } from '@/earn/utils/buildDepositToMorphoTx';\nimport type { Call } from '@/transaction/types';\nimport { type Address, parseUnits } from 'viem';\n\nexport type UseBuildDepositToMorphoTxParams = {\n  vaultAddress: Address;\n  recipientAddress?: Address;\n  amount: string;\n};\n\n/**\n * Generates Call[] for a Morpho deposit transaction\n * to be used with <Transaction />\n */\nexport function useBuildDepositToMorphoTx({\n  vaultAddress,\n  recipientAddress,\n  amount,\n}: UseBuildDepositToMorphoTxParams): {\n  calls: Call[];\n} {\n  const { asset } = useMorphoVault({\n    vaultAddress,\n    recipientAddress,\n  });\n\n  if (!asset || !asset.decimals || !recipientAddress) {\n    return {\n      calls: [],\n    };\n  }\n\n  const parsedAmount = parseUnits(amount, asset.decimals);\n\n  const calls = buildDepositToMorphoTx({\n    recipientAddress,\n    vaultAddress,\n    tokenAddress: asset.address,\n    amount: parsedAmount,\n  });\n\n  return {\n    calls,\n  };\n}\n"],"names":[],"mappings":";;;AAgBO,SAAS,0BAA0B;AAAA,EACxC;AAAA,EACA;AAAA,EACA;AACF,GAEE;AACM,QAAA,EAAE,MAAM,IAAI,eAAe;AAAA,IAC/B;AAAA,IACA;AAAA,EAAA,CACD;AAED,MAAI,CAAC,SAAS,CAAC,MAAM,YAAY,CAAC,kBAAkB;AAC3C,WAAA;AAAA,MACL,OAAO,CAAA;AAAA,IACT;AAAA,EAAA;AAGF,QAAM,eAAe,WAAW,QAAQ,MAAM,QAAQ;AAEtD,QAAM,QAAQ,uBAAuB;AAAA,IACnC;AAAA,IACA;AAAA,IACA,cAAc,MAAM;AAAA,IACpB,QAAQ;AAAA,EAAA,CACT;AAEM,SAAA;AAAA,IACL;AAAA,EACF;AACF;"}