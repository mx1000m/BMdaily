{"version":3,"file":"getAPIParamsForToken.js","sources":["../../../src/api/utils/getAPIParamsForToken.ts"],"sourcesContent":["import { formatDecimals } from '../../swap/utils/formatDecimals';\nimport type {\n  APIError,\n  BuildSwapTransactionParams,\n  GetAPIParamsForToken,\n  SwapAPIParams,\n} from '../types';\n\n/**\n * Converts parameters with `Token` to ones with address.\n *\n * Additionally adds default values for optional request fields.\n */\nexport function getAPIParamsForToken(\n  params: GetAPIParamsForToken,\n): SwapAPIParams | APIError {\n  const { from, to, amount, amountReference, isAmountInDecimals } = params;\n  const { fromAddress } = params as BuildSwapTransactionParams;\n  const decimals = amountReference === 'from' ? from.decimals : to.decimals;\n\n  // Input validation\n  if (typeof amount !== 'string' || amount.trim() === '') {\n    return {\n      code: 'INVALID_INPUT',\n      error: 'Invalid input: amount must be a non-empty string',\n      message: '',\n    };\n  }\n  if (!Number.isInteger(decimals) || decimals < 0) {\n    return {\n      code: 'INVALID_INPUT',\n      error: 'Invalid input: decimals must be a non-negative integer',\n      message: '',\n    };\n  }\n  if (!/^(?:0|[1-9]\\d*|\\.\\d+)(?:\\.\\d*)?$/.test(amount)) {\n    return {\n      code: 'INVALID_INPUT',\n      error: 'Invalid input: amount must be a non-negative number string',\n      message: '',\n    };\n  }\n\n  return {\n    fromAddress: fromAddress,\n    from: from.address || 'ETH',\n    to: to.address || 'ETH',\n    amount: isAmountInDecimals\n      ? amount\n      : formatDecimals(amount, false, decimals),\n    amountReference: amountReference || 'from',\n  };\n}\n"],"names":[],"mappings":";AAaO,SAAS,qBACd,QAC0B;AAC1B,QAAM,EAAE,MAAM,IAAI,QAAQ,iBAAiB,uBAAuB;AAC5D,QAAA,EAAE,gBAAgB;AACxB,QAAM,WAAW,oBAAoB,SAAS,KAAK,WAAW,GAAG;AAGjE,MAAI,OAAO,WAAW,YAAY,OAAO,KAAA,MAAW,IAAI;AAC/C,WAAA;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAAA,EAAA;AAEF,MAAI,CAAC,OAAO,UAAU,QAAQ,KAAK,WAAW,GAAG;AACxC,WAAA;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAAA,EAAA;AAEF,MAAI,CAAC,mCAAmC,KAAK,MAAM,GAAG;AAC7C,WAAA;AAAA,MACL,MAAM;AAAA,MACN,OAAO;AAAA,MACP,SAAS;AAAA,IACX;AAAA,EAAA;AAGK,SAAA;AAAA,IACL;AAAA,IACA,MAAM,KAAK,WAAW;AAAA,IACtB,IAAI,GAAG,WAAW;AAAA,IAClB,QAAQ,qBACJ,SACA,eAAe,QAAQ,OAAO,QAAQ;AAAA,IAC1C,iBAAiB,mBAAmB;AAAA,EACtC;AACF;"}