{"version":3,"file":"mocks.js","sources":["../../src/api/mocks.ts"],"sourcesContent":["export const MOCK_VALID_CHARGE_ID = '1b03e80d-4e87-46fd-9772-422a1b693fb7';\nexport const MOCK_INVALID_CHARGE_ID = '00000000-0000-0000-0000-000000000000';\nexport const MOCK_VALID_PAYER_ADDRESS =\n  '0x98fAbEA34A3A377916EBF7793f37E11EE98D29Eb';\nexport const MOCK_HYDRATE_CHARGE_SUCCESS_RESPONSE = {\n  id: 1,\n  jsonrpc: '2.0',\n  result: {\n    id: MOCK_VALID_CHARGE_ID,\n    callData: {\n      deadline: '2024-08-29T23:00:38Z',\n      feeAmount: '10000',\n      id: '0xd2e57fb373f246768a193cadd4a5ce1e',\n      operator: '0xd1db362f9d23a029834375afa2b37d91d2e67a95',\n      prefix: '0x4b3220496e666f726d6174696f6e616c204d6573736167653a20333220',\n      recipient: '0xb724dcF5f1156dd8E2AB217921b5Bd46a9e5cAa5',\n      recipientAmount: '990000',\n      recipientCurrency: '0xF175520C52418dfE19C8098071a252da48Cd1C19',\n      refundDestination: MOCK_VALID_PAYER_ADDRESS,\n      signature:\n        '0xb49a08026bdfdc55e3b1b797a9481fbdb7a9246c73f5f77fece76d5f24e979561f2168862aed0dd72980a4f9930cf23836084f3326b98b5546b280c4f0d57aae1b',\n    },\n    metaData: {\n      chainId: 8453,\n      contractAddress: '0x131642c019AF815Ae5F9926272A70C84AE5C37ab',\n      sender: MOCK_VALID_PAYER_ADDRESS,\n      settlementCurrencyAddress: '0xF175520C52418dfE19C8098071a252da48Cd1C19',\n    },\n  },\n};\nexport const MOCK_VALID_PRODUCT_ID = '1b03e80d-4e87-46fd-9772-422a1b693fb7';\nexport const MOCK_CREATE_PRODUCT_CHARGE_SUCCESS_RESPONSE = {\n  id: 1,\n  jsonrpc: '2.0',\n  result: {\n    id: MOCK_VALID_CHARGE_ID,\n    callData: {\n      deadline: '2024-08-29T23:00:38Z',\n      feeAmount: '10000',\n      id: '0xd2e57fb373f246768a193cadd4a5ce1e',\n      operator: '0xd1db362f9d23a029834375afa2b37d91d2e67a95',\n      prefix: '0x4b3220496e666f726d6174696f6e616c204d6573736167653a20333220',\n      recipient: '0xb724dcF5f1156dd8E2AB217921b5Bd46a9e5cAa5',\n      recipientAmount: '990000',\n      recipientCurrency: '0xF175520C52418dfE19C8098071a252da48Cd1C19',\n      refundDestination: MOCK_VALID_PAYER_ADDRESS,\n      signature:\n        '0xb49a08026bdfdc55e3b1b797a9481fbdb7a9246c73f5f77fece76d5f24e979561f2168862aed0dd72980a4f9930cf23836084f3326b98b5546b280c4f0d57aae1b',\n    },\n    metaData: {\n      chainId: 8453,\n      contractAddress: '0x131642c019AF815Ae5F9926272A70C84AE5C37ab',\n      sender: MOCK_VALID_PAYER_ADDRESS,\n      settlementCurrencyAddress: '0xF175520C52418dfE19C8098071a252da48Cd1C19',\n    },\n  },\n};\n\nexport const MOCK_HYDRATE_CHARGE_INVALID_CHARGE_ERROR_RESPONSE = {\n  id: 1,\n  jsonrpc: '2.0',\n  error: {\n    code: -32601,\n    message: 'method not found - Not found',\n  },\n};\n"],"names":[],"mappings":"AAAO,MAAM,uBAAuB;AAC7B,MAAM,yBAAyB;AAC/B,MAAM,2BACX;AACK,MAAM,uCAAuC;AAAA,EAClD,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,WACE;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACR,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,2BAA2B;AAAA,IAAA;AAAA,EAC7B;AAEJ;AACO,MAAM,wBAAwB;AAC9B,MAAM,8CAA8C;AAAA,EACzD,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,QAAQ;AAAA,IACN,IAAI;AAAA,IACJ,UAAU;AAAA,MACR,UAAU;AAAA,MACV,WAAW;AAAA,MACX,IAAI;AAAA,MACJ,UAAU;AAAA,MACV,QAAQ;AAAA,MACR,WAAW;AAAA,MACX,iBAAiB;AAAA,MACjB,mBAAmB;AAAA,MACnB,mBAAmB;AAAA,MACnB,WACE;AAAA,IACJ;AAAA,IACA,UAAU;AAAA,MACR,SAAS;AAAA,MACT,iBAAiB;AAAA,MACjB,QAAQ;AAAA,MACR,2BAA2B;AAAA,IAAA;AAAA,EAC7B;AAEJ;AAEO,MAAM,oDAAoD;AAAA,EAC/D,IAAI;AAAA,EACJ,SAAS;AAAA,EACT,OAAO;AAAA,IACL,MAAM;AAAA,IACN,SAAS;AAAA,EAAA;AAEb;"}