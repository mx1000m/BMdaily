{"version":3,"file":"validateMessage.js","sources":["../../../src/signature/utils/validateMessage.ts"],"sourcesContent":["import type {\n  SignMessageParameters,\n  SignTypedDataParameters,\n} from 'wagmi/actions';\nimport {\n  type MessageData,\n  MessageType,\n  type ValidateMessageResult,\n} from '../types';\n\nexport function isTypedData(\n  params: MessageData,\n): params is SignTypedDataParameters {\n  return !!(\n    params?.types &&\n    params?.primaryType &&\n    typeof params?.message === 'object'\n  );\n}\n\nexport function isSignableMessage(\n  params: MessageData,\n): params is SignMessageParameters {\n  return (\n    typeof params?.message === 'string' ||\n    (typeof params?.message === 'object' &&\n      'raw' in params.message &&\n      (typeof params.message.raw === 'string' ||\n        params.message.raw instanceof Uint8Array))\n  );\n}\n\nexport function validateMessage(\n  messageData: MessageData,\n): ValidateMessageResult {\n  if (isTypedData(messageData)) {\n    return {\n      type: MessageType.TYPED_DATA,\n      data: messageData,\n    };\n  }\n\n  if (isSignableMessage(messageData)) {\n    return {\n      type: MessageType.SIGNABLE_MESSAGE,\n      data: messageData,\n    };\n  }\n\n  return {\n    type: MessageType.INVALID,\n    data: null,\n  };\n}\n"],"names":[],"mappings":";AAUO,SAAS,YACd,QACmC;AAC5B,SAAA,CAAC,GACN,iCAAQ,WACR,iCAAQ,gBACR,QAAO,iCAAQ,aAAY;AAE/B;AAEO,SAAS,kBACd,QACiC;AACjC,SACE,QAAO,iCAAQ,aAAY,YAC1B,QAAO,iCAAQ,aAAY,YAC1B,SAAS,OAAO,YACf,OAAO,OAAO,QAAQ,QAAQ,YAC7B,OAAO,QAAQ,eAAe;AAEtC;AAEO,SAAS,gBACd,aACuB;AACnB,MAAA,YAAY,WAAW,GAAG;AACrB,WAAA;AAAA,MACL,MAAM,YAAY;AAAA,MAClB,MAAM;AAAA,IACR;AAAA,EAAA;AAGE,MAAA,kBAAkB,WAAW,GAAG;AAC3B,WAAA;AAAA,MACL,MAAM,YAAY;AAAA,MAClB,MAAM;AAAA,IACR;AAAA,EAAA;AAGK,SAAA;AAAA,IACL,MAAM,YAAY;AAAA,IAClB,MAAM;AAAA,EACR;AACF;"}