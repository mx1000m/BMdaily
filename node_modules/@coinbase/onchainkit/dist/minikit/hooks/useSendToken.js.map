{"version":3,"file":"useSendToken.js","sources":["../../../src/minikit/hooks/useSendToken.ts"],"sourcesContent":["import sdk from '@farcaster/frame-sdk';\nimport { useMutation } from '@tanstack/react-query';\n\ntype SendTokenParams = {\n  /**\n   * Token to send, formatted as a CAIP-19 asset ID.\n   * @example\n   * ```\n   * // Base USDC\n   * \"eip155:8453/erc20:0x833589fCD6eDb6E08f4c7C32D4f71b54bdA02913\"\n   * ```\n   */\n  token?: string;\n  /**\n   * Amount to send, formatted as a numeric string including decimals.\n   * @example\n   * ```\n   * // 10 USDC\n   * \"1000000\"\n   * ```\n   */\n  amount?: string;\n  /**\n   * Recipient wallet address\n   */\n  recipientAddress?: string;\n  /**\n   * Recipient FID\n   */\n  recipientFid?: number;\n};\n\ntype SendTokenReturnOriginal = ReturnType<\n  typeof useMutation<\n    Awaited<ReturnType<typeof sdk.actions.sendToken>>,\n    Error,\n    SendTokenParams\n  >\n>;\n\ntype SendTokenReturn = Omit<\n  SendTokenReturnOriginal,\n  'mutate' | 'mutateAsync'\n> & {\n  sendToken: SendTokenReturnOriginal['mutate'];\n  sendTokenAsync: SendTokenReturnOriginal['mutateAsync'];\n};\n\n/**\n * Opens the send token form with the parameters pre-filled. The user will be able to modify the details before submitting the transaction.\n */\nexport function useSendToken(): SendTokenReturn {\n  const { mutate, mutateAsync, ...rest } = useMutation({\n    mutationFn: async (params: SendTokenParams) => {\n      return await sdk.actions.sendToken(params);\n    },\n  });\n\n  return {\n    ...rest,\n    sendToken: mutate,\n    sendTokenAsync: mutateAsync,\n  };\n}\n"],"names":[],"mappings":";;AAmDO,SAAS,eAAgC;AAC9C,QAAM,EAAE,QAAQ,aAAa,GAAG,KAAA,IAAS,YAAY;AAAA,IACnD,YAAY,OAAO,WAA4B;AAC7C,aAAO,MAAM,IAAI,QAAQ,UAAU,MAAM;AAAA,IAAA;AAAA,EAC3C,CACD;AAEM,SAAA;AAAA,IACL,GAAG;AAAA,IACH,WAAW;AAAA,IACX,gBAAgB;AAAA,EAClB;AACF;"}