{"version":3,"file":"usePopupMonitor.js","sources":["../../../src/buy/hooks/usePopupMonitor.ts"],"sourcesContent":["import { useCallback, useEffect, useRef } from 'react';\n\nexport const usePopupMonitor = (onClose?: () => void) => {\n  const intervalRef = useRef<number | null>(null);\n\n  // Start monitoring the popup\n  const startPopupMonitor = useCallback(\n    (popupWindow: Window) => {\n      if (intervalRef.current) {\n        clearInterval(intervalRef.current);\n      }\n      intervalRef.current = window.setInterval(() => {\n        if (popupWindow.closed) {\n          if (intervalRef.current) {\n            clearInterval(intervalRef.current);\n            intervalRef.current = null;\n          }\n          onClose?.();\n        }\n      }, 500);\n    },\n    [onClose],\n  );\n\n  // Stop monitoring the popup\n  const stopPopupMonitor = useCallback(() => {\n    if (intervalRef.current) {\n      clearInterval(intervalRef.current);\n      intervalRef.current = null;\n    }\n  }, []);\n\n  // Cleanup interval on unmount\n  useEffect(() => {\n    return () => stopPopupMonitor();\n  }, [stopPopupMonitor]);\n\n  return { startPopupMonitor, stopPopupMonitor };\n};\n"],"names":[],"mappings":";AAEa,MAAA,kBAAkB,CAAC,YAAyB;AACjD,QAAA,cAAc,OAAsB,IAAI;AAG9C,QAAM,oBAAoB;AAAA,IACxB,CAAC,gBAAwB;AACvB,UAAI,YAAY,SAAS;AACvB,sBAAc,YAAY,OAAO;AAAA,MAAA;AAEvB,kBAAA,UAAU,OAAO,YAAY,MAAM;AAC7C,YAAI,YAAY,QAAQ;AACtB,cAAI,YAAY,SAAS;AACvB,0BAAc,YAAY,OAAO;AACjC,wBAAY,UAAU;AAAA,UAAA;AAEd;AAAA,QAAA;AAAA,SAEX,GAAG;AAAA,IACR;AAAA,IACA,CAAC,OAAO;AAAA,EACV;AAGM,QAAA,mBAAmB,YAAY,MAAM;AACzC,QAAI,YAAY,SAAS;AACvB,oBAAc,YAAY,OAAO;AACjC,kBAAY,UAAU;AAAA,IAAA;AAAA,EAE1B,GAAG,EAAE;AAGL,YAAU,MAAM;AACd,WAAO,MAAM,iBAAiB;AAAA,EAAA,GAC7B,CAAC,gBAAgB,CAAC;AAEd,SAAA,EAAE,mBAAmB,iBAAiB;AAC/C;"}