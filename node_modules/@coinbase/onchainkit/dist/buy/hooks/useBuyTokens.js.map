{"version":3,"file":"useBuyTokens.js","sources":["../../../src/buy/hooks/useBuyTokens.ts"],"sourcesContent":["import { useState } from 'react';\nimport type { Address } from 'viem';\nimport { useValue } from '../../internal/hooks/useValue';\nimport { useSwapBalances } from '../../swap/hooks/useSwapBalances';\nimport type { Token } from '../../token';\nimport { ethToken, usdcToken } from '../../token/constants';\nimport type { BuyTokens } from '../types';\nimport { useBuyToken } from './useBuyToken';\n\nexport const useBuyTokens = (\n  toToken: Token,\n  fromToken?: Token,\n  address?: Address,\n): BuyTokens => {\n  const fromETH = useBuyToken(toToken, ethToken, address);\n  const fromUSDC = useBuyToken(toToken, usdcToken, address);\n  const from = useBuyToken(toToken, fromToken, address);\n\n  const [toAmount, setToAmount] = useState('');\n  const [toAmountUSD, setToAmountUSD] = useState('');\n  const [toLoading, setToLoading] = useState(false);\n\n  // If the toToken is ETH, use USDC for swapQuote\n  const token = toToken?.symbol === 'ETH' ? usdcToken : ethToken;\n\n  const {\n    toBalanceString: balance,\n    toTokenBalanceError: error,\n    toTokenResponse: balanceResponse,\n  } = useSwapBalances({ address, fromToken: token, toToken });\n\n  const to = useValue({\n    balance,\n    balanceResponse,\n    amount: toAmount,\n    setAmount: setToAmount,\n    amountUSD: toAmountUSD,\n    setAmountUSD: setToAmountUSD,\n    token: toToken,\n    loading: toLoading,\n    setLoading: setToLoading,\n    error,\n  });\n\n  return { fromETH, fromUSDC, from, to };\n};\n"],"names":[],"mappings":";;;;;AASO,MAAM,eAAe,CAC1B,SACA,WACA,YACc;AACd,QAAM,UAAU,YAAY,SAAS,UAAU,OAAO;AACtD,QAAM,WAAW,YAAY,SAAS,WAAW,OAAO;AACxD,QAAM,OAAO,YAAY,SAAS,WAAW,OAAO;AAEpD,QAAM,CAAC,UAAU,WAAW,IAAI,SAAS,EAAE;AAC3C,QAAM,CAAC,aAAa,cAAc,IAAI,SAAS,EAAE;AACjD,QAAM,CAAC,WAAW,YAAY,IAAI,SAAS,KAAK;AAGhD,QAAM,SAAQ,mCAAS,YAAW,QAAQ,YAAY;AAEhD,QAAA;AAAA,IACJ,iBAAiB;AAAA,IACjB,qBAAqB;AAAA,IACrB,iBAAiB;AAAA,EAAA,IACf,gBAAgB,EAAE,SAAS,WAAW,OAAO,SAAS;AAE1D,QAAM,KAAK,SAAS;AAAA,IAClB;AAAA,IACA;AAAA,IACA,QAAQ;AAAA,IACR,WAAW;AAAA,IACX,WAAW;AAAA,IACX,cAAc;AAAA,IACd,OAAO;AAAA,IACP,SAAS;AAAA,IACT,YAAY;AAAA,IACZ;AAAA,EAAA,CACD;AAED,SAAO,EAAE,SAAS,UAAU,MAAM,GAAG;AACvC;"}