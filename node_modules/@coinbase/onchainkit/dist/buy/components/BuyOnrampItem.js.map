{"version":3,"file":"BuyOnrampItem.js","sources":["../../../src/buy/components/BuyOnrampItem.tsx"],"sourcesContent":["'use client';\nimport type { SwapUnit } from '@/swap/types';\nimport { usdcToken } from '@/token/constants';\nimport { useCallback, useMemo } from 'react';\nimport { applePaySvg } from '../../internal/svg/applePaySvg';\nimport { cardSvg } from '../../internal/svg/cardSvg';\nimport { coinbaseLogoSvg } from '../../internal/svg/coinbaseLogoSvg';\nimport { cn, color, pressable, text } from '../../styles/theme';\nimport { useBuyContext } from './BuyProvider';\n\ntype OnrampItemReact = {\n  name: string;\n  description: string;\n  onClick: () => void;\n  svg?: React.ReactNode;\n  icon: string;\n  to?: SwapUnit;\n};\n\nconst ONRAMP_ICON_MAP: Record<string, React.ReactNode> = {\n  applePay: applePaySvg,\n  coinbasePay: coinbaseLogoSvg,\n  creditCard: cardSvg,\n};\n\nexport function BuyOnrampItem({\n  name,\n  description,\n  onClick,\n  icon,\n  to,\n}: OnrampItemReact) {\n  const { setIsDropdownOpen } = useBuyContext();\n\n  const handleClick = useCallback(() => {\n    setIsDropdownOpen(false);\n    onClick();\n  }, [onClick, setIsDropdownOpen]);\n\n  const fiatAmount = useMemo(() => {\n    // if token is USDC the usd estimate\n    // can be slightly off (4.9999999) so\n    // use amount instead to prevent disabling of onramp\n    if (\n      to?.token?.address?.toLowerCase() === usdcToken?.address.toLowerCase()\n    ) {\n      return to?.amount;\n    }\n    return to?.amountUSD;\n  }, [to]);\n\n  // Debit and Apple Pay have a minimum purchase amount of $5\n  const isDisabled =\n    !fiatAmount || (Number.parseFloat(fiatAmount) < 5 && name !== 'Coinbase');\n\n  const message = useMemo(() => {\n    if (isDisabled) {\n      return 'Minimum purchase amount is $5';\n    }\n    return description;\n  }, [isDisabled, description]);\n\n  return (\n    <button\n      className={cn(\n        'flex items-center gap-2 rounded-lg p-2',\n        text.label2,\n        !isDisabled && pressable.default,\n        isDisabled && color.foregroundMuted,\n      )}\n      onClick={handleClick}\n      type=\"button\"\n      data-testid={`ock-${icon}OnrampItem`}\n      disabled={isDisabled}\n    >\n      <div className=\"flex h-9 w-9 items-center justify-center\">\n        {ONRAMP_ICON_MAP[icon]}\n      </div>\n      <div className=\"flex flex-col items-start\">\n        <div className=\"relative flex items-center gap-1\">\n          <div>{name}</div>\n        </div>\n        <div className={cn('text-xs', color.foregroundMuted)}>{message}</div>\n      </div>\n    </button>\n  );\n}\n"],"names":[],"mappings":";;;;;;;;AAmBA,MAAM,kBAAmD;AAAA,EACvD,UAAU;AAAA,EACV,aAAa;AAAA,EACb,YAAY;AACd;AAEO,SAAS,cAAc;AAAA,EAC5B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AACF,GAAoB;AACZ,QAAA,EAAE,kBAAkB,IAAI,cAAc;AAEtC,QAAA,cAAc,YAAY,MAAM;AACpC,sBAAkB,KAAK;AACf,YAAA;AAAA,EAAA,GACP,CAAC,SAAS,iBAAiB,CAAC;AAEzB,QAAA,aAAa,QAAQ,MAAM;;AAK7B,UAAA,oCAAI,UAAJ,mBAAW,YAAX,mBAAoB,qBAAkB,sCAAW,QAAQ,gBACzD;AACA,aAAO,yBAAI;AAAA,IAAA;AAEb,WAAO,yBAAI;AAAA,EAAA,GACV,CAAC,EAAE,CAAC;AAGD,QAAA,aACJ,CAAC,cAAe,OAAO,WAAW,UAAU,IAAI,KAAK,SAAS;AAE1D,QAAA,UAAU,QAAQ,MAAM;AAC5B,QAAI,YAAY;AACP,aAAA;AAAA,IAAA;AAEF,WAAA;AAAA,EAAA,GACN,CAAC,YAAY,WAAW,CAAC;AAG1B,SAAA;AAAA,IAAC;AAAA,IAAA;AAAA,MACC,WAAW;AAAA,QACT;AAAA,QACA,KAAK;AAAA,QACL,CAAC,cAAc,UAAU;AAAA,QACzB,cAAc,MAAM;AAAA,MACtB;AAAA,MACA,SAAS;AAAA,MACT,MAAK;AAAA,MACL,eAAa,OAAO,IAAI;AAAA,MACxB,UAAU;AAAA,MAEV,UAAA;AAAA,QAAA,oBAAC,OAAI,EAAA,WAAU,4CACZ,UAAA,gBAAgB,IAAI,GACvB;AAAA,QACA,qBAAC,OAAI,EAAA,WAAU,6BACb,UAAA;AAAA,UAAA,oBAAC,SAAI,WAAU,oCACb,UAAC,oBAAA,OAAA,EAAK,gBAAK,EACb,CAAA;AAAA,UACA,oBAAC,SAAI,WAAW,GAAG,WAAW,MAAM,eAAe,GAAI,UAAQ,QAAA,CAAA;AAAA,QAAA,EACjE,CAAA;AAAA,MAAA;AAAA,IAAA;AAAA,EACF;AAEJ;"}