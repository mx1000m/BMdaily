"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);
var verifyJwtWithEndpoint_exports = {};
__export(verifyJwtWithEndpoint_exports, {
  verifyJwtWithEndpoint: () => verifyJwtWithEndpoint
});
module.exports = __toCommonJS(verifyJwtWithEndpoint_exports);
var import_errors = require("../errors.js");
async function verifyJwtWithEndpoint({ origin }, options) {
  const url = new URL(`${origin}/verify-jwt`);
  url.searchParams.set("token", options.token);
  url.searchParams.set("domain", options.domain);
  const response = await fetch(url);
  if (response.status === 200) {
    return await response.json();
  }
  if (response.status === 400) {
    const { error, error_message } = await response.json();
    if (error === "invalid_token") {
      throw new import_errors.InvalidTokenError(error_message);
    }
    if (error === "invalid_params") {
      throw new import_errors.InvalidParametersError(error_message);
    }
  }
  throw new import_errors.ResponseError({ status: response.status });
}
__name(verifyJwtWithEndpoint, "verifyJwtWithEndpoint");
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  verifyJwtWithEndpoint
});
